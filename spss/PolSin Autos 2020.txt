* Encoding: windows-1252.

GET DATA  /TYPE = TXT
 /FILE = 'S:\AXHAUT.CSV'
 /DELCASE = LINE
 /DELIMITERS = ","
 /ARRANGEMENT = DELIMITED
 /FIRSTCASE = 1
 /IMPORTCASE = ALL
 /QUALIFIER = '"'
 /VARIABLES =
 P1FEMA F4.0	
 P1FEMM F2.0	
 CIA A3	
 P1POLI F7.0	
 P1OPER F7.0	
 P1POCO F1.0	
 P1SUOP F2.0	
 ENDOSO F6.0	
 P1TIOU F1.0	
 P1STOU F2.0	
 P1FEMIX A8
 P1FEM1X A8	
 P1VIGDX A8	
 P1VIGHX A8	
 P1DURA F5.0	
 P1MODF F1.0	
 P1FLOT A3	
 P1CPRO F2.0	
 P1COBL A4	
 P1POST F4.0	
 P1VHCT F1.0	
 P1VHAN F4.0	
 P1CATE F1.0	
 P1VHUV F1.0	
 P1VHMC A3	
 P1VHMO A3	
 P1VHCS A3	
 P1VHCR A3	
 P1VHTU A1	
 P1VHDI A1	
 P1VHVU COMMA15.2
 P1GARA A1
 P1ALAR A1
 P1EDAD F2.0	
 P1SEXO A1
 P1PROF A3	
 P1ESCI A1
 P1ANTI F1.0	
 P1SITU A1
 P1ZONA F1.0	
 P1RCAC COMMA15.2
 P1PRIMA COMMA15.2
 PRRC COMMA15.2
 PRDA COMMA15.2
 PRAS COMMA15.2
 RECA COMMA15.2
 PRCABE F4.0	
 PROD F5.0	
 CSP F5.0	
 P1CAPI F3.0	
 P1VAR1 F3.0	
 P1VAR2 F3.0	
 P1LOJA A3	
 P1PVLE A1	
 P1PVNU F7.0	
 P1PNLE A3	
 P1PNNU F3.0
 P1MTDF A1
 P1COPR COMMA15.2
 P1PAT A7
 P1CHAS A30
 P1MOTO A30
 P1ORIG A1
 P1REA COMMA15.2
 P1REFI COMMA15.2
 P1DERE COMMA15.2
 P1COP1 COMMA15.2
 P1NIV2 F5.0
 P1COP2 COMMA15.2
 P1COP3 COMMA15.2
 P1NIV4 F5.0
 P1COP4 COMMA15.2
 P1NIV5 F5.0
 P1COP5 COMMA15.2
 P1NIV6 F5.0
 P1COP6 COMMA15.2
 P1NIV7 F5.0
 P1COP7 COMMA15.2
 P1NIV8 F5.0
 P1COP8 COMMA15.2
 P1NIV9 F5.0
 P1COP9 COMMA15.2
 P1CTRE F5.0
 PRCE COMMA15.2
 P1XPRO F3.0
 P1MWEB A1
 P1ASEN F7.0
 P1IFRA COMMA15.2
 P1SCTA F2.0
 P1TARC F4.0
 P1COPS F1.0
 P1ARCD F4.0
 P1SPOL F9.0
 P1POAN F7.0
 P1PONU F7.0
 P1RAMA F2.0
 P1ASCP F4.0
P1ASCS F1.0
 .
 CACHE.
 EXECUTE .

*----------------------------------------------------------------------------------------------------------------------arreglo P1PRIMA.
COMPUTE P1PRIMA=PRDA+PRCE+PRAS+PRRC.
EXECUTE.

*----------------------------------------------------------------------------------------------------------------------arreglo P1MOTO que sale con caracteres que dan error al grabar a Excel.
IF (P1CHAS='1J8HC58M66Y151362') P1MOTO=''.
IF (P1CHAS='8AD2AN6AD8G029535') P1MOTO=''.
IF (P1CHAS='8AGSB19N08R120462') P1MOTO=''.
EXECUTE.



*----------------------------------------------------------------------------------------------------------------------arreglos de fechas.
STRING DIA (A2).
COMPUTE DIA=SUBSTR(P1FEMIX,7,2) .
COMPUTE DIA1=NUMBER(DIA,F2.0).
STRING MES (A2).
COMPUTE MES=SUBSTR(P1FEMIX,5,2) .
COMPUTE MES1=NUMBER(MES,F2.0).
STRING AÑO (A4).
COMPUTE AÑO=SUBSTR(P1FEMIX,1,4) .
COMPUTE AÑO1=NUMBER(AÑO,F4.0).
COMPUTE P1FEMI=DATE.DMY(DIA1,MES1,AÑO1).
FORMATS P1FEMI (EDATE10).

COMPUTE DIA=SUBSTR(P1FEM1X,7,2) .
COMPUTE DIA1=NUMBER(DIA,F2.0).
COMPUTE MES=SUBSTR(P1FEM1X,5,2) .
COMPUTE MES1=NUMBER(MES,F2.0).
COMPUTE AÑO=SUBSTR(P1FEM1X,1,4) .
COMPUTE AÑO1=NUMBER(AÑO,F4.0).
COMPUTE P1FEM1=DATE.DMY(DIA1,MES1,AÑO1).
FORMATS P1FEM1 (EDATE10).

COMPUTE DIA=SUBSTR(P1VIGDX,7,2) .
COMPUTE DIA1=NUMBER(DIA,F2.0).
COMPUTE MES=SUBSTR(P1VIGDX,5,2) .
COMPUTE MES1=NUMBER(MES,F2.0).
COMPUTE AÑO=SUBSTR(P1VIGDX,1,4) .
COMPUTE AÑO1=NUMBER(AÑO,F4.0).
COMPUTE P1VIGD=DATE.DMY(DIA1,MES1,AÑO1).
FORMATS P1VIGD (EDATE10).

COMPUTE DIA=SUBSTR(P1VIGHX,7,2) .
COMPUTE DIA1=NUMBER(DIA,F2.0).
COMPUTE MES=SUBSTR(P1VIGHX,5,2) .
COMPUTE MES1=NUMBER(MES,F2.0).
COMPUTE AÑO=SUBSTR(P1VIGHX,1,4) .
COMPUTE AÑO1=NUMBER(AÑO,F4.0).
COMPUTE P1VIGH=DATE.DMY(DIA1,MES1,AÑO1).
FORMATS P1VIGH (EDATE10).

EXECUTE .

*--------------------------------------------------------------------------------------------------------------------cruzo con codigos postales.
SORT CASES BY P1POST P1COPS.
SAVE OUTFILE= 'S:\SPSS\Autos\Temp\EAU1.sav'.
*GET FILE= 'S:\SPSS\Autos\Temp\EAU1.sav'.



MATCH FILES /FILE=*
/TABLE='S:\SPSS\Tablas de sistema\Bases\GNTLOC.SAV'
/RENAME PSCOPO=P1POST PSCOPS=P1COPS
/BY P1POST P1COPS.
EXECUTE.

RENAME VARIABLES LOCALIDADCORREGIDA=LOCALIDAD.
RENAME VARIABLES PROVINCIACORREGIDA=PROVINCIA.

DELETE VARIABLES PSZONT PSZONR  LATITUDLONGITUD COMUNA BARRIOCABA ZONAAMBA CORDON LATITUDPROMEDIOPARTIDO LONGITUDPROMEDIOPARTIDO.
EXECUTE.


*--------------------------------------------------------------------------------------------------------------------cruzo con MM.
SORT CASES BY P1VHMC P1VHMO P1VHCS P1VHCR.
SAVE OUTFILE= 'S:\SPSS\Autos\Temp\EAU2.sav'.


GET FILE='S:\SPSS\Tablas de sistema\Bases\MM.SAV'.
AGGREGATE /OUTFILE=* MODE=ADDVARIABLES
/BREAK=
/MAX=MAX(CIERRE).
COMPUTE CIERREACT=DATE.DMY(1,XDATE.MONTH(MAX)+1,XDATE.YEAR(MAX))-86400.
FORMATS CIERREACT (EDATE10).
EXECUTE.
SELECT IF CIERRE=CIERREACT.
EXECUTE.
DELETE VARIABLES CIERRE CIERREACT MAX.
SORT CASES BY P1VHMC P1VHMO P1VHCS P1VHCR.
AGGREGATE /OUTFILE=*
/BREAK=P1VHMC P1VHMO P1VHCS P1VHCR MM /P1VH0K=MAX(P1VH0K).
MATCH FILES FILE='S:\SPSS\Autos\Temp\EAU2.sav'
/TABLE=* /BY P1VHMC P1VHMO P1VHCS P1VHCR /DROP P1VH0K.
IF MM='' MM=CONCAT(P1VHMC,'-',P1VHMO).
EXECUTE.



*--------------------------------------------------------------------------------------------------------------------cruzo con TipoMovimiento.
SORT CASES BY P1TIOU P1STOU.

MATCH FILES /FILE=*
/TABLE='S:\SPSS\Tablas de sistema\Bases\SET901.SAV'
/BY P1TIOU P1STOU
/DROP P1STOS P1LIEA P1NOPR P1STOA P1MAR1 P1MAR2 P1MAR3 P1MAR4 P1MAR5 P1CTEN P1USE P1DATE P1TIME.



*--------------------------------------------------------------------------------------------------------------------cruzo con bonificaciones.
SORT CASES BY P1POLI P1POCO P1SUOP.

MATCH FILES /FILE=*
/TABLE='S:\SPSS\Tablas de sistema\Bases\PAHET4detallado.SAV'
/BY P1POLI P1POCO P1SUOP.
EXECUTE.
IF SYSMIS(MARCA_KM2) MARCA_KM2=0.
IF SYSMIS(MARCA_OT) MARCA_OT=0.
IF SYSMIS(MARCA_KM1) MARCA_KM1=0.
IF SYSMIS(MARCA_AG) MARCA_AG=0.
IF SYSMIS(MARCA_BR) MARCA_BR=0.
IF SYSMIS(MARCA_CI) MARCA_CI=0.
IF SYSMIS(MARCA_MM) MARCA_MM=0.
IF SYSMIS(MARCA_DC) MARCA_DC=0.
IF SYSMIS(MARCA_DI) MARCA_DI=0.
IF SYSMIS(MARCA_IT) MARCA_IT=0.
IF SYSMIS(MARCA_LJ) MARCA_LJ=0.
IF SYSMIS(MARCA_MC) MARCA_MC=0.
IF SYSMIS(MARCA_COBA) MARCA_COBA=0.
IF SYSMIS(MARCA_DEC) MARCA_DEC=0.
IF SYSMIS(MARCA_PCONT) MARCA_PCONT=0.
IF SYSMIS(DTO_KM2) DTO_KM2=0.
IF SYSMIS(DTO_OT) DTO_OT=0.
IF SYSMIS(DTO_KM1) DTO_KM1=0.
IF SYSMIS(DTO_AG) DTO_AG=0.
IF SYSMIS(DTO_BR) DTO_BR=0.
IF SYSMIS(DTO_CI) DTO_CI=0.
IF SYSMIS(DTO_MM) DTO_MM=0.
IF SYSMIS(DTO_DC) DTO_DC=0.
IF SYSMIS(DTO_DI) DTO_DI=0.
IF SYSMIS(DTO_IT) DTO_IT=0.
IF SYSMIS(DTO_LJ) DTO_LJ=0.
IF SYSMIS(DTO_MC) DTO_MC=0.
IF SYSMIS(DTO_COBA) DTO_COBA=0.
IF SYSMIS(DTO_DEC) DTO_DEC=0.
IF SYSMIS(DTO_PCONT) DTO_PCONT=0.
EXECUTE.



*--------------------------------------------------------------------------------------------------------------------cruzo con capitulo variante variante.
ALTER TYPE P1CAPI (F12.0).
ALTER TYPE P1VAR1 (F12.0).
ALTER TYPE P1VAR2 (F12.0).
ALTER TYPE P1MTDF (F12.0).

IF SYSMIS(P1MTDF) P1MTDF=0.
STRING AUX (A4).
COMPUTE AUX=P1VHCR.
EXECUTE.
IF (AUX NE '4X4') AUX='NULL'.
EXECUTE.

ALTER TYPE P1ORIG (A4).

SORT CASES BY P1CAPI P1VAR1 P1VAR2 P1MTDF P1ORIG AUX.

MATCH FILES /FILE=*
/TABLE='S:\SPSS\Tablas de sistema\Bases\Capitulo Variante Variante.sav'
/RENAME P1VHCR=AUX
/BY P1CAPI P1VAR1 P1VAR2 P1MTDF P1ORIG AUX
/DROP DESCRIPCION
.
EXECUTE.
DELETE VARIABLES AUX.



*--------------------------------------------------------------------------------------------------------------------cruzo con cobertura.
STRING COBERTURA (A4).
COMPUTE COBERTURA=P1COBL.
EXECUTE.

IF (SUBSTR(COBERTURA,1,1)='B') COBERTURA='B'.
IF (SUBSTR(COBERTURA,1,1)='D') COBERTURA='D'.
EXECUTE.



*---------------------------------------------------------------------------------------------------------------------------------transformaciones.
DELETE VARIABLES DIA DIA1 MES MES1 AÑO AÑO1 P1VIGDX P1VIGHX P1FEM1X P1FEMIX P1FEMM P1FEMA CIA .
COMPUTE NBJOUR=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
CACHE.
EXECUTE.



*-------------------------------------------------------------------------------------------------------------------------------cruzo con productores.
SORT CASES BY PROD CSP.
EXECUTE.

MATCH FILES /FILE=*
/TABLE='S:\SPSS\Comercial\Bases\Productores.SAV'
/RENAME CAB=CSP
/BY PROD CSP
/DROP NIVEL FRONTING.
EXECUTE.

SORT CASES BY P1POLI P1POCO.
*----------------------------------------------------------------------Calculo tipo de poliza.

AGGREGATE
/OUTFILE='S:\SPSS\AUTOS\Temp\TipoPoliza.sav'
/BREAK = P1POLI P1POCO
/TIPOP = MIN(P1TIOU).
EXECUTE.

MATCH FILES FILE=*
/TABLE='S:\SPSS\AUTOS\Temp\TipoPoliza.sav'
/BY P1POLI P1POCO.
EXECUTE.

STRING TIPO(A12).
EXECUTE.
IF (TIPOP=1) TIPO='Poliza Nueva'.
IF (TIPOP=2) TIPO='Renovacion'.
IF (TIPOP=3) TIPO='Endoso'.
EXECUTE.

DELETE VARIABLES TIPOP.

SAVE OUTFILE='S:\SPSS\AUTOS\Temp\EAUC.sav'.

*-----------------------------------------------------------------------------------------------------------------------------------------------Cruzo con última SA.

GET FILE='S:\SPSS\Tablas de sistema\Bases\SET207.sav'.

COMPUTE MESMAX=XDATE.MONTH(CIERRE).
COMPUTE AÑOMAX=XDATE.YEAR(CIERRE).
COMPUTE PSFCIERRE=DATE.DMY(1,MESMAX+1,AÑOMAX)-86400.
FORMATS PSFCIERRE (EDATE10).
COMPUTE A=1.
EXECUTE.
AGGREGATE OUTFILE=*
MODE ADDVARIABLES
/BREAK A
/CIERRE2=MAX(PSFCIERRE).
SELECT IF (CIERRE=CIERRE2).
EXECUTE.

DELETE VARIABLES MESMAX AÑOMAX PSFCIERRE CIERRE2 A.

SORT CASES BY P1VHMC P1VHMO P1VHCS P1VHCR P1VHAN.

RENAME VARIABLES P1VHVU=SA_USADO.

SAVE OUTFILE='S:\SPSS\AUTOS\Temp\SET207.sav'.

GET FILE='S:\SPSS\Tablas de sistema\Bases\SET206.sav'.

COMPUTE MESMAX=XDATE.MONTH(CIERRE).
COMPUTE AÑOMAX=XDATE.YEAR(CIERRE).
COMPUTE PSFCIERRE=DATE.DMY(1,MESMAX+1,AÑOMAX)-86400.
FORMATS PSFCIERRE (EDATE10).
COMPUTE A=1.
EXECUTE.
AGGREGATE OUTFILE=*
MODE ADDVARIABLES
/BREAK A
/CIERRE2=MAX(PSFCIERRE).
SELECT IF (CIERRE=CIERRE2).
EXECUTE.

DELETE VARIABLES MESMAX AÑOMAX PSFCIERRE CIERRE2 A.

SORT CASES BY P1VHMC P1VHMO P1VHCS P1VHCR.

RENAME VARIABLES P1VH0K=SA_0KM.

SAVE OUTFILE='S:\SPSS\AUTOS\Temp\SET206.sav'.


GET FILE='S:\SPSS\AUTOS\Temp\EAUC.sav'.
EXECUTE.

COMPUTE AÑO=P1VHAN.
EXECUTE.

SORT CASES BY P1VHMC P1VHMO P1VHCS P1VHCR AÑO.

MATCH FILES /FILE=*
/TABLE='S:\SPSS\AUTOS\Temp\SET207.sav'
/RENAME P1VHAN=AÑO
/BY P1VHMC P1VHMO P1VHCS P1VHCR AÑO.
EXECUTE.

IF (SYSMIS(SA_USADO)) SA_USADO=0.
EXECUTE.

DELETE VARIABLES P1COMO P1VHCV P1VHPV CIERRE.

MATCH FILES /FILE=*
/TABLE='S:\SPSS\AUTOS\Temp\SET206.sav'
/BY P1VHMC P1VHMO P1VHCS P1VHCR.
EXECUTE.

IF (SYSMIS(SA_0KM)) SA_0KM=0.
EXECUTE.

DELETE VARIABLES P1COMO CIERRE.

SORT CASES BY P1RAMA P1POLI P1SUOP P1POCO P1PRIMA.

DATASET NAME EAU.

*--------------------------------------------------------------------------------------------------------------------Traigo factores de Scoring.

GET DATA
  /TYPE=TXT
  /FILE="S:\PAHET3.csv"
  /DELCASE=LINE
  /DELIMITERS=","
  /QUALIFIER='"'
  /ARRANGEMENT=DELIMITED
  /FIRSTCASE=1
  /IMPORTCASE=ALL
  /VARIABLES=
  T3EMPR A1
  T3SUCU A2
  T3ARCD F8.0
  T3SPOL F11.0
  T3SSPO F5.0
  T3RAMA F4.0
  T3ARSE F4.0
  T3OPER F9.0
  T3SUOP F5.0
  T3POCO F6.0
  T3TAAJ F4.0
  T3COSG A4
  T3CERT F11.0
  T3POLI F9.0
  T3TIAJ A1
  T3TIAC A1
  T3VEFA F1.0
  T3CORC COMMA9.2
  T3COCA COMMA9.2
  T3MAR1 A1
  T3MAR2 F1.0
  T3MAR3 F1.0
  T3MAR4 F1.0
  T3MAR5 F1.0
  T3STRG F1.0
  T3USER A10
  T3TIME F8.0
  T3DATE F8.0
  T3CANT F4.0.
CACHE.
EXECUTE.


DELETE VARIABLES T3MAR1 T3MAR2 T3MAR3 T3MAR4 T3MAR5 T3STRG T3USER T3TIME T3DATE T3CANT.


MATCH FILES /FILE=*
/TABLE='S:\SPSS\Tablas de Sistema\Bases\SET2370.SAV'
/BY T3TAAJ.
EXECUTE.

SORT CASES BY T3TAAJ T3COSG.

MATCH FILES /FILE=*
/TABLE='S:\SPSS\Tablas de Sistema\Bases\SET2371.SAV'
/BY T3TAAJ T3COSG.
EXECUTE.

SORT CASES BY T3POLI T3POCO T3SUOP.

DELETE VARIABLES T3TISG T3COEX T3CMAN T3CRC1 T3CCA1 T3CRC2 T3CCA2 T3RVAL T3ACAN T3ADEP T3GDEP.

SAVE OUTFILE='S:\SPSS\Autos\Bases\Scoring.sav'.

COMPUTE A001=0.
COMPUTE A002=0.
COMPUTE A003=0.
COMPUTE EDAD=0.
COMPUTE HIJOS=0.
COMPUTE GARAGE=0.
IF (T3COSG='A001') A001=T3CORC.
IF (T3COSG='A002') A002=T3CORC.
IF (T3COSG='A003') A003=T3CORC.
IF (T3COSG='A001') EDAD=T3VEFA.
IF (T3COSG='A002') HIJOS=T3VEFA.
IF (T3COSG='A003') GARAGE=T3VEFA.
EXECUTE.

AGGREGATE OUTFILE=*
/BREAK T3RAMA T3POLI T3SUOP T3POCO
/F1=SUM(A001)
/F2=SUM(A002)
/F3=SUM(A003)
/EDAD=SUM(EDAD)
/HIJOS=SUM(HIJOS)
/GARAGE=SUM(GARAGE).
EXECUTE.


MATCH FILES /FILE='EAU'
/TABLE=*
/RENAME T3RAMA=P1RAMA T3POLI=P1POLI T3SUOP=P1SUOP T3POCO=P1POCO
/BY P1RAMA P1POLI P1SUOP P1POCO.
EXECUTE.

DATASET CLOSE EAU.

SORT CASES BY P1POLI P1POCO P1SUOP P1PRIMA.

*------------------------------------------------------------------------------------------------------------------salva EAU.
SAVE OUTFILE= 'S:\SPSS\Autos\Bases\EAU.sav'
 /COMPRESSED.


*--------------------------------------------------------------------------------------------------------------------Arreglo endosos anteriores al inicio de vigencia.

SORT CASES BY P1POLI P1POCO P1SUOP.

COMPUTE CPR=0.
IF (P1POLI=LAG(P1POLI) AND P1POCO=LAG(P1POCO) AND P1VIGH=LAG(P1VIGH) AND P1VIGD<LAG(P1VIGD) AND (LAG(P1STOU)=0 OR LAG(P1STOU)=11)) CPR=1.
EXECUTE.
 
TEMPORARY.
SELECT IF CPR=1.
SAVE OUTFILE='S:\SPSS\Autos\Temp\END ANT VIG.SAV'.

IF (CPR=1) P1VIGD=LAG(P1VIGD).
EXECUTE.

DELETE VARIABLES CPR.


*-----------------------------------------------------------------------------------------------------------------------poliza emitidas y anuladas el mismo dia.
COMPUTE P=P1POLI*1000+P1POCO.
SORT CASES BY P(A) P1VIGD (A) P1SUOP (A) .
COMPUTE IND=0.
COMPUTE LD=LAG(P1VIGD).
COMPUTE LH=LAG(P1VIGH).
COMPUTE LPOL=LAG(P1POLI).
COMPUTE LPOC=LAG(P1POCO).
COMPUTE PRIMA=LAG(P1PRIMA).
COMPUTE RC=LAG(PRRC).
COMPUTE DA=LAG(PRDA).
COMPUTE AS=LAG(PRAS).
COMPUTE RE=LAG(RECA).
COMPUTE COM=LAG(P1COPR).

COMPUTE REA=LAG(P1REA).
COMPUTE DERE=LAG(P1DERE).
COMPUTE REFI=LAG(P1REFI).

COMPUTE CE=LAG(PRCE).
COMPUTE P1=LAG(P1COP1).
COMPUTE P2=LAG(P1COP2).
COMPUTE P3=LAG(P1COP3).
COMPUTE P4=LAG(P1COP4).
COMPUTE P5=LAG(P1COP5).
COMPUTE P6=LAG(P1COP6).
COMPUTE P7=LAG(P1COP7).
COMPUTE P8=LAG(P1COP8).
COMPUTE P9=LAG(P1COP9).

IF (P1POLI=LPOL AND P1PRIMA>PRIMA AND P1POCO=LPOC AND P1VIGD=LD AND P1VIGH=LH AND
P1PRIMA+PRIMA=0 AND PRRC+RC=0 AND PRDA+DA=0 AND PRAS+AS=0 AND RECA+RE=0 AND COM+P1COPR=0 AND CE+PRCE=0 AND 
P1REA+REA=0 AND P1DERE+DERE=0 AND P1REFI+REFI=0 AND P1COP1+P1=0 AND P1COP2+P2=0 AND P1COP3+P3=0 AND 
P1COP4+P4=0 AND P1COP5+P5=0 AND P1COP6+P6=0 AND P1COP7+P7=0 AND P1COP8+P8=0 AND P1COP9+P9=0) IND=1.

SORT CASES BY  P(A)  P1VIGD (D) P1SUOP (D).
COMPUTE LIND=0.
IF (LAG(IND)=1) LIND=1.
EXECUTE.
DELETE VARIABLES LD LH LPOL LPOC PRIMA RC DA AS RE COM CE REA REFI DERE P1 P2 P3 P4 P5 P6 P7 P8 P9.
COMPUTE IND2=IND+LIND.
EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF(IND2 NE 1).
EXECUTE .
DELETE VARIABLES IND LIND IND2.
SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).
CACHE.
EXECUTE.



*----------------------------------------------------------------------------------------------------------endoso que no modifican prima (cambio de vehiculo).
FILTER OFF.
USE ALL.
COMPUTE C=0.

IF (P NE LAG(P) OR 
P1TIOU NE 3 OR 
P1STOU NE 7 OR 
P1VIGH NE LAG(P1VIGH) OR 
P1VHMC NE LAG(P1VHMC) OR 
P1VHMO NE LAG(P1VHMO) OR 
P1VHCS NE LAG(P1VHCS) OR 
P1VHCR NE LAG(P1VHCR) OR 
P1PRIMA NE 0 OR
PRRC NE 0 OR 
PRDA NE 0 OR 
PRAS NE 0 OR
RECA NE 0 OR
P1COPR NE 0 OR 
PRCE NE 0 OR
P1REA NE 0 OR 
P1REFI NE 0 OR 
P1DERE NE 0 OR 
P1COP1 NE 0 OR 
P1COP2 NE 0 OR 
P1COP3 NE 0 OR
P1COP4 NE 0 OR
P1COP5 NE 0 OR
P1COP6 NE 0 OR
P1COP7 NE 0 OR
P1COP8 NE 0 OR
P1COP9 NE 0) C=1.
EXECUTE.
CACHE.

SORT CASES BY  P(A)  P1VIGD (D) P1SUOP (D).
CACHE.
EXECUTE.

IF (C=1 AND LAG(C)=0) MARCA_KM2=LAG(MARCA_KM2).
IF (C=1 AND LAG(C)=0) MARCA_OT=LAG(MARCA_OT).
IF (C=1 AND LAG(C)=0) MARCA_KM1=LAG(MARCA_KM1).
IF (C=1 AND LAG(C)=0) MARCA_AG=LAG(MARCA_AG).
IF (C=1 AND LAG(C)=0) MARCA_BR=LAG(MARCA_BR).
IF (C=1 AND LAG(C)=0) MARCA_CI=LAG(MARCA_CI).
IF (C=1 AND LAG(C)=0) MARCA_MM=LAG(MARCA_MM).
IF (C=1 AND LAG(C)=0) MARCA_DC=LAG(MARCA_DC).
IF (C=1 AND LAG(C)=0) MARCA_DI=LAG(MARCA_DI).
IF (C=1 AND LAG(C)=0) MARCA_IT=LAG(MARCA_IT).
IF (C=1 AND LAG(C)=0) MARCA_LJ=LAG(MARCA_LJ).
IF (C=1 AND LAG(C)=0) MARCA_MC=LAG(MARCA_MC).
IF (C=1 AND LAG(C)=0) MARCA_COBA=LAG(MARCA_COBA).
IF (C=1 AND LAG(C)=0) MARCA_DEC=LAG(MARCA_DEC).
IF (C=1 AND LAG(C)=0) MARCA_PCONT=LAG(MARCA_PCONT).
IF (C=1 AND LAG(C)=0) DTO_KM2=LAG(DTO_KM2).
IF (C=1 AND LAG(C)=0) DTO_OT=LAG(DTO_OT).
IF (C=1 AND LAG(C)=0) DTO_KM1=LAG(DTO_KM1).
IF (C=1 AND LAG(C)=0) DTO_AG=LAG(DTO_AG).
IF (C=1 AND LAG(C)=0) DTO_BR=LAG(DTO_BR).
IF (C=1 AND LAG(C)=0) DTO_CI=LAG(DTO_CI).
IF (C=1 AND LAG(C)=0) DTO_MM=LAG(DTO_MM).
IF (C=1 AND LAG(C)=0) DTO_DC=LAG(DTO_DC).
IF (C=1 AND LAG(C)=0) DTO_DI=LAG(DTO_DI).
IF (C=1 AND LAG(C)=0) DTO_IT=LAG(DTO_IT).
IF (C=1 AND LAG(C)=0) DTO_LJ=LAG(DTO_LJ).
IF (C=1 AND LAG(C)=0) DTO_MC=LAG(DTO_MC).
IF (C=1 AND LAG(C)=0) DTO_COBA=LAG(DTO_COBA).
IF (C=1 AND LAG(C)=0) DTO_DEC=LAG(DTO_DEC).
IF (C=1 AND LAG(C)=0) DTO_PCONT=LAG(DTO_PCONT).
IF (C=1 AND LAG(C)=0) P1IFRA=LAG(P1IFRA).

SELECT IF C=1.
EXECUTE.
DELETE VARIABLES C.
SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).
CACHE.
EXECUTE.





*----------------------------------------------------------------------------------------endoso que no modifican prima (cambio productor o asegurado).
FILTER OFF.
USE ALL.
SELECT IF (P1TIOU NE 3 OR P1STOU NE 80).
EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF (P1TIOU NE 3 OR P1STOU NE 70).
EXECUTE.
CACHE.
EXECUTE.



*-------------------------------------------------------------------------------------------------------endoso que no modifican prima (falsas anulaciones).
FILTER OFF.
USE ALL.
SELECT IF (P1STOU NE 90 OR 
P1PRIMA NE 0 OR
PRRC NE 0 OR
PRDA NE 0 OR
PRAS NE 0 OR
RECA NE 0 OR 
P1COPR NE 0 OR 
PRCE NE 0 OR
P1REA NE 0 OR 
P1REFI NE 0 OR 
P1DERE NE 0 OR 
P1COP1 NE 0 OR 
P1COP2 NE 0 OR 
P1COP3 NE 0 OR
P1COP4 NE 0 OR
P1COP5 NE 0 OR
P1COP6 NE 0 OR
P1COP7 NE 0 OR
P1COP8 NE 0 OR
P1COP9 NE 0).
EXECUTE.
CACHE.
EXECUTE.


*------------------------------------------------------------------------------------------------------endoso que no modifican prima (falsas anulaciones).
FILTER OFF.
USE ALL.
SELECT IF (P1STOU NE 4 OR 
P1TIOU NE 3 OR
P1PRIMA NE 0 OR
PRRC NE 0 OR
PRDA NE 0 OR
PRAS NE 0 OR
RECA NE 0 OR 
P1COPR NE 0 OR
PRCE NE 0 OR
P1REA NE 0 OR 
P1REFI NE 0 OR 
P1DERE NE 0 OR 
P1COP1 NE 0 OR 
P1COP2 NE 0 OR 
P1COP3 NE 0 OR
P1COP4 NE 0 OR
P1COP5 NE 0 OR
P1COP6 NE 0 OR
P1COP7 NE 0 OR
P1COP8 NE 0 OR
P1COP9 NE 0).
EXECUTE.
COMPUTE IND=0.
IF (P=LAG(P) AND (P1VIGD=LAG(P1VIGD) OR P1VIGD=LAG(P1VIGD)+1 OR P1VIGD=LAG(P1VIGD)-1) AND 
(NBJOUR=LAG(NBJOUR) OR NBJOUR=LAG(NBJOUR)+1 OR NBJOUR=LAG(NBJOUR)-1)) IND=1.
EXECUTE.

SORT CASES BY  P(A)  P1VIGD (D) P1SUOP (D).

DO IF (LAG(IND)=1).
COMPUTE P1PRIMA=P1PRIMA+LAG(P1PRIMA).
COMPUTE PRRC=PRRC+LAG(PRRC).
COMPUTE PRDA=PRDA+LAG(PRDA).
COMPUTE PRAS=PRAS+LAG(PRAS).
COMPUTE RECA=RECA+LAG(RECA).
COMPUTE P1COPR=P1COPR+LAG(P1COPR).

COMPUTE P1REA=P1REA+LAG(P1REA).
COMPUTE P1REFI=P1REFI+LAG(P1REFI).
COMPUTE P1DERE=P1DERE+LAG(P1DERE).

COMPUTE PRCE=PRCE+LAG(PRCE).
COMPUTE P1COP1=P1COP1+LAG(P1COP1).
COMPUTE P1COP2=P1COP2+LAG(P1COP2).
COMPUTE P1COP3=P1COP3+LAG(P1COP3).
COMPUTE P1COP4=P1COP4+LAG(P1COP4).
COMPUTE P1COP5=P1COP5+LAG(P1COP5).
COMPUTE P1COP6=P1COP6+LAG(P1COP6).
COMPUTE P1COP7=P1COP7+LAG(P1COP7).
COMPUTE P1COP8=P1COP8+LAG(P1COP8).
COMPUTE P1COP9=P1COP9+LAG(P1COP9).

COMPUTE MARCA_KM2=LAG(MARCA_KM2).
COMPUTE MARCA_OT=LAG(MARCA_OT).
COMPUTE MARCA_KM1=LAG(MARCA_KM1).
COMPUTE MARCA_AG=LAG(MARCA_AG).
COMPUTE MARCA_BR=LAG(MARCA_BR).
COMPUTE MARCA_CI=LAG(MARCA_CI).
COMPUTE MARCA_MM=LAG(MARCA_MM).
COMPUTE MARCA_DC=LAG(MARCA_DC).
COMPUTE MARCA_DI=LAG(MARCA_DI).
COMPUTE MARCA_IT=LAG(MARCA_IT).
COMPUTE MARCA_LJ=LAG(MARCA_LJ).
COMPUTE MARCA_MC=LAG(MARCA_MC).
COMPUTE MARCA_COBA=LAG(MARCA_COBA).
COMPUTE MARCA_DEC=LAG(MARCA_DEC).
COMPUTE MARCA_PCONT=LAG(MARCA_PCONT).
COMPUTE DTO_KM2=LAG(DTO_KM2).
COMPUTE DTO_OT=LAG(DTO_OT).
COMPUTE DTO_KM1=LAG(DTO_KM1).
COMPUTE DTO_AG=LAG(DTO_AG).
COMPUTE DTO_BR=LAG(DTO_BR).
COMPUTE DTO_CI=LAG(DTO_CI).
COMPUTE DTO_MM=LAG(DTO_MM).
COMPUTE DTO_DC=LAG(DTO_DC).
COMPUTE DTO_DI=LAG(DTO_DI).
COMPUTE DTO_IT=LAG(DTO_IT).
COMPUTE DTO_LJ=LAG(DTO_LJ).
COMPUTE DTO_MC=LAG(DTO_MC).
COMPUTE DTO_COBA=LAG(DTO_COBA).
COMPUTE DTO_DEC=LAG(DTO_DEC).
COMPUTE DTO_PCONT=LAG(DTO_PCONT).
COMPUTE P1IFRA=LAG(P1IFRA).
COMPUTE SA_USADO=LAG(SA_USADO).
COMPUTE SA_0KM=LAG(SA_0KM).
COMPUTE P1VHVU=LAG(P1VHVU).
COMPUTE P1COBL=LAG(P1COBL).
COMPUTE P1VHAN=LAG(P1VHAN).
COMPUTE P1ZONA=LAG(P1ZONA).
COMPUTE PROD=LAG(PROD).
COMPUTE CSP=LAG(CSP).
COMPUTE PRODUCTOR=LAG(PRODUCTOR).
COMPUTE CABECERA=LAG(CABECERA).
COMPUTE LOCALIDAD=LAG(LOCALIDAD).
COMPUTE PROVINCIA=LAG(PROVINCIA).
COMPUTE MM=LAG(MM).
COMPUTE ZONA=LAG(ZONA).
END IF.

EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF (IND NE 1).
EXECUTE.
CACHE.
EXECUTE.


*----------------------------------------------------------------------------------------------------------------------------------------tratamiento de anulaciones por siniestralidad total.
SORT CASES BY P1POLI P1POCO P1SUOP.
COMPUTE C=0.
IF(P=LAG(P) AND P1TIOU=4 AND P1STOU=5 AND P1PRIMA=0  AND
PRRC=0 AND
PRDA=0 AND
PRAS=0 AND
RECA=0 AND
P1COPR=0 AND
PRCE=0 AND
P1REA=0 AND
P1REFI=0 AND
P1DERE=0 AND
P1COP1=0 AND
P1COP2=0 AND
P1COP3=0 AND
P1COP4=0 AND
P1COP5=0 AND
P1COP6=0 AND
P1COP7=0 AND
P1COP8=0 AND
P1COP9=0) C=1.
EXECUTE.

SORT CASES BY P1POLI(A) P1POCO(D) P1VIGD(D).
IF(LAG(C)=1) P1VIGH=LAG(P1VIGD).
EXECUTE.

SELECT IF C NE 1.
EXECUTE.

DELETE VARIABLES C.


*---------------------------------------------------------------------------------------------------------------------------------------suprime endosos con prima 0.
COMPUTE PTOT=P1PRIMA+PRRC+PRDA+PRAS+RECA+P1COPR+PRCE+P1REA+P1REFI+P1DERE+P1COP1+P1COP2+P1COP3
+P1COP4+P1COP5+P1COP6+P1COP7+P1COP8+P1COP9.
FILTER OFF.
USE ALL.
COMPUTE PTOT=TRUNC(PTOT*10000)/10000.
SELECT IF (PTOT NE 0).
EXECUTE.
CACHE.
EXECUTE.




*----------------------------------------------------------------------------------------------------------------------------junta endosos sobre el mismo periodo.
COMPUTE IND=0.

DO IF (P=LAG(P) AND LAG(P1PRIMA)=0 AND LAG(PRRC)=0 AND 
LAG(PRDA)=0 AND LAG(PRAS)=0 AND LAG(PRCE)=0 AND P1VIGD=LAG(P1VIGD) AND P1VIGH=LAG(P1VIGH)).

COMPUTE IND=1.
COMPUTE RECA=RECA+LAG(RECA).
COMPUTE P1COPR=P1COPR+LAG(P1COPR).

COMPUTE P1REA=P1REA+LAG(P1REA).
COMPUTE P1REFI=P1REFI+LAG(P1REFI).
COMPUTE P1DERE=P1DERE+LAG(P1DERE).

COMPUTE P1COP1=P1COP1+LAG(P1COP1).
COMPUTE P1COP2=P1COP2+LAG(P1COP2).
COMPUTE P1COP3=P1COP3+LAG(P1COP3).
COMPUTE P1COP4=P1COP4+LAG(P1COP4).
COMPUTE P1COP5=P1COP5+LAG(P1COP5).
COMPUTE P1COP6=P1COP6+LAG(P1COP6).
COMPUTE P1COP7=P1COP7+LAG(P1COP7).
COMPUTE P1COP8=P1COP8+LAG(P1COP8).
COMPUTE P1COP9=P1COP9+LAG(P1COP9).

END IF.
SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).
EXECUTE.
COMPUTE LIND=LAG(IND).
IF (SYSMISS(LIND)) LIND=0.
IF (LIND = 0) VAR1=0.
EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF (VAR1 = 0).
EXECUTE.
DELETE VARIABLES VAR1 IND LIND.
CACHE.
EXECUTE.



*-----------------------------------------------------------------------------------------------------------------------------------------tratamiento de anulaciones.

*tipos de endoso.
COMPUTE J=3.
IF (P1TIOU=1 OR P1TIOU=2 OR P1TIOU=5 OR (P1TIOU=3 AND P1STOU=11) OR (P1TIOU=3 AND P1STOU=5) OR (P1TIOU=3 AND P1STOU=7)) J=1.
IF (P1TIOU=4) J=2.
IF (P1TIOU=3 AND P1STOU=90 AND P1PRIMA<0) J=2.
IF (P1TIOU=3 AND P1STOU=6 AND P1PRIMA<0) J=2.
EXECUTE.

SORT CASES BY P(A) P1VIGD (D) P1SUOP(D).
CACHE.
EXECUTE.
COMPUTE LD=LAG(P1VIGD).
COMPUTE ANUL=0.

COMPUTE PRIMA=LAG(P1PRIMA).
COMPUTE RC=LAG(PRRC).
COMPUTE DA=LAG(PRDA).
COMPUTE AS=LAG(PRAS).
COMPUTE RE=LAG(RECA).
COMPUTE COM=LAG(P1COPR).
COMPUTE CE=LAG(PRCE).
COMPUTE REA=LAG(P1REA).
COMPUTE REFI=LAG(P1REFI).
COMPUTE DERE=LAG(P1DERE).
COMPUTE P1=LAG(P1COP1).
COMPUTE P2=LAG(P1COP2).
COMPUTE P3=LAG(P1COP3).
COMPUTE P4=LAG(P1COP4).
COMPUTE P5=LAG(P1COP5).
COMPUTE P6=LAG(P1COP6).
COMPUTE P7=LAG(P1COP7).
COMPUTE P8=LAG(P1COP8).
COMPUTE P9=LAG(P1COP9).
EXECUTE.

DO IF (P=LAG(P) AND LAG(J)=2 AND J NE 2 AND P1VIGH=LAG(P1VIGH)).

COMPUTE P1VIGH=LD.
COMPUTE ANUL=1.
COMPUTE P1PRIMA=P1PRIMA+(PRIMA).
COMPUTE PRRC=PRRC+(RC).
COMPUTE PRDA=PRDA+(DA).
COMPUTE PRAS=PRAS+(AS).
COMPUTE RECA=RECA+(RE).
COMPUTE P1COPR=P1COPR+(COM).
COMPUTE PRCE=PRCE+(CE).
COMPUTE P1REA=P1REA+(REA).
COMPUTE P1REFI=P1REFI+(REFI).
COMPUTE P1DERE=P1DERE+(DERE).
COMPUTE P1COP1=P1COP1+(P1).
COMPUTE P1COP2=P1COP2+(P2).
COMPUTE P1COP3=P1COP3+(P3).
COMPUTE P1COP4=P1COP4+(P4).
COMPUTE P1COP5=P1COP5+(P5).
COMPUTE P1COP6=P1COP6+(P6).
COMPUTE P1COP7=P1COP7+(P7).
COMPUTE P1COP8=P1COP8+(P8).
COMPUTE P1COP9=P1COP9+(P9).

COMPUTE NBJOUR=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
END IF.

EXECUTE.
SORT CASES BY  P(A) P1VIGD (A) P1SUOP(A).
CACHE.
EXECUTE.
COMPUTE IND=0.
IF LAG(ANUL)=1 IND=1.
EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF (IND=0).
EXECUTE.

*------------------------------------------------------------------------------------------------------------------------------tratamiento del cambio de vehiculo.
SORT CASES BY P(A) P1VIGD(D) P1SUOP(D).
CACHE.
EXECUTE.
COMPUTE LD=LAG(P1VIGD).
COMPUTE IND=0.

DO IF (P=LAG(P) AND LAG(P1TIOU)=3 AND LAG(P1STOU)=7 ).
COMPUTE P1VIGH=LD.
COMPUTE IND=1.
END IF.

SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).
EXECUTE.

COMPUTE IND2=0.
IF (P=LAG(P)) IND2=LAG(IND).
EXECUTE.

COMPUTE NBJOUR1=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
EXECUTE.

COMPUTE LNB=LAG(NBJOUR).
COMPUTE LNB1=LAG(NBJOUR1).
COMPUTE PRIMA=LAG(P1PRIMA).
COMPUTE RC=LAG(PRRC).
COMPUTE DA=LAG(PRDA).
COMPUTE AS=LAG(PRAS).
COMPUTE RE=LAG(RECA).
COMPUTE COM=LAG(P1COPR).
COMPUTE CE=LAG(PRCE).
COMPUTE REA=LAG(P1REA).
COMPUTE REFI=LAG(P1REFI).
COMPUTE DERE=LAG(P1DERE).
COMPUTE P1=LAG(P1COP1).
COMPUTE P2=LAG(P1COP2).
COMPUTE P3=LAG(P1COP3).
COMPUTE P4=LAG(P1COP4).
COMPUTE P5=LAG(P1COP5).
COMPUTE P6=LAG(P1COP6).
COMPUTE P7=LAG(P1COP7).
COMPUTE P8=LAG(P1COP8).
COMPUTE P9=LAG(P1COP9).

COMPUTE PRIME=0.
COMPUTE RCE=0.
COMPUTE DAE=0.
COMPUTE ASE=0.
COMPUTE REE=0.
COMPUTE COMM=0.
COMPUTE CEE=0.
COMPUTE REAE=0.
COMPUTE REFIE=0.
COMPUTE DEREE=0.
COMPUTE P1E=0.
COMPUTE P2E=0.
COMPUTE P3E=0.
COMPUTE P4E=0.
COMPUTE P5E=0.
COMPUTE P6E=0.
COMPUTE P7E=0.
COMPUTE P8E=0.
COMPUTE P9E=0.
EXECUTE.

DO IF (P=LAG(P) AND P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)<>'CBIO. DE VEHICULO(+)').

COMPUTE CPT=LNB1/LNB.
COMPUTE PRIME=(CPT*PRIMA).
COMPUTE RCE=(CPT*RC).
COMPUTE DAE=(CPT*DA).
COMPUTE ASE=(CPT*AS).
COMPUTE REE=(CPT*RE).
COMPUTE COMM=(CPT*COM).
COMPUTE CEE=(CPT*CE).
COMPUTE REAE=(CPT*REA).
COMPUTE REFIE=(CPT*REFI).
COMPUTE DEREE=(CPT*DERE).
COMPUTE P1E=(CPT*P1).
COMPUTE P2E=(CPT*P2).
COMPUTE P3E=(CPT*P3).
COMPUTE P4E=(CPT*P4).
COMPUTE P5E=(CPT*P5).
COMPUTE P6E=(CPT*P6).
COMPUTE P7E=(CPT*P7).
COMPUTE P8E=(CPT*P8).
COMPUTE P9E=(CPT*P9).


COMPUTE P1PRIMA=P1PRIMA+((1-CPT)*PRIMA).
COMPUTE PRRC=PRRC+((1-CPT)*RC).
COMPUTE PRDA=PRDA+((1-CPT)*DA).
COMPUTE PRAS=PRAS+((1-CPT)*AS).
COMPUTE RECA=RECA+((1-CPT)*RE).
COMPUTE P1COPR=P1COPR+((1-CPT)*COM).
COMPUTE PRCE=PRCE+((1-CPT)*CE).
COMPUTE P1REA=P1REA+((1-CPT)*REA).
COMPUTE P1REFI=P1REFI+((1-CPT)*REFI).
COMPUTE P1DERE=P1DERE+((1-CPT)*DERE).
COMPUTE P1COP1=P1COP1+((1-CPT)*P1).
COMPUTE P1COP2=P1COP2+((1-CPT)*P2).
COMPUTE P1COP3=P1COP3+((1-CPT)*P3).
COMPUTE P1COP4=P1COP4+((1-CPT)*P4).
COMPUTE P1COP5=P1COP5+((1-CPT)*P5).
COMPUTE P1COP6=P1COP6+((1-CPT)*P6).
COMPUTE P1COP7=P1COP7+((1-CPT)*P7).
COMPUTE P1COP8=P1COP8+((1-CPT)*P8).
COMPUTE P1COP9=P1COP9+((1-CPT)*P9).
END IF.

COMPUTE NBJOUR=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
EXECUTE.
DELETE VARIABLES LNB1 CPT PRIMA RC DA AS RE COM CE REA REFI DERE P1 P2 P3 P4 P5 P6 P7 P8 P9.
SORT CASES BY  P(A)  P1VIGD (D) P1SUOP (D).
CACHE.
EXECUTE.
COMPUTE LPR=LAG(PRIME).
COMPUTE LPRRC=LAG(RCE).
COMPUTE LPRDA=LAG(DAE).
COMPUTE LPRAS=LAG(ASE).
COMPUTE LRECA=LAG(REE).
COMPUTE LCOM=LAG(COMM).
COMPUTE LPRCE=LAG(CEE).
COMPUTE LREA=LAG(REAE).
COMPUTE LREFI=LAG(REFIE).
COMPUTE LDERE=LAG(DEREE).
COMPUTE LP1=LAG(P1E).
COMPUTE LP2=LAG(P2E).
COMPUTE LP3=LAG(P3E).
COMPUTE LP4=LAG(P4E).
COMPUTE LP5=LAG(P5E).
COMPUTE LP6=LAG(P6E).
COMPUTE LP7=LAG(P7E).
COMPUTE LP8=LAG(P8E).
COMPUTE LP9=LAG(P9E).

EXECUTE.

DO IF (P=LAG(P) AND LAG(P1TIOU)=3 AND LAG(P1STOU)=7 AND IND=1 AND IND2<>1).
COMPUTE P1PRIMA=LPR.
COMPUTE PRRC=LPRRC.
COMPUTE PRDA=LPRDA.
COMPUTE PRAS=LPRAS.
COMPUTE RECA=LRECA.
COMPUTE P1COPR=LCOM.
COMPUTE PRCE=LPRCE.
COMPUTE P1REA=LREA.
COMPUTE P1REFI=LREFI.
COMPUTE P1DERE=LDERE.
COMPUTE P1COP1=LP1.
COMPUTE P1COP2=LP2.
COMPUTE P1COP3=LP3.
COMPUTE P1COP4=LP4.
COMPUTE P1COP5=LP5.
COMPUTE P1COP6=LP6.
COMPUTE P1COP7=LP7.
COMPUTE P1COP8=LP8.
COMPUTE P1COP9=LP9.
END IF.
EXECUTE.
DELETE VARIABLES PRIME RCE ASE DAE REE COMM LD LPRRC LPRAS LPRDA LRECA LCOM LPR CEE REAE REFIE DEREE P1E P2E P3E P4E P5E
 P6E P7E P8E P9E LPRCE LREA LREFI LDERE LP1 LP2 LP3 LP4 LP5 LP6 LP7 LP8 LP9.
SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).
CACHE.
EXECUTE.

COMPUTE CPT2=1.
IF (LNB<>0) CPT2=NBJOUR1/LNB.
COMPUTE CPT3=LAG(CPT2).
COMPUTE CPT4=1.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') CPT4=1-CPT3.
IF (IND=1 AND IND2=1) CPT4=CPT2.
EXECUTE.

SORT CASES BY  P(A)  P1VIGD (D) P1SUOP (D).

COMPUTE PRI2=LAG(P1PRIMA).
COMPUTE RC2=LAG(PRRC).
COMPUTE DA2=LAG(PRDA).
COMPUTE AS2=LAG(PRAS).
COMPUTE REC2=LAG(RECA).
COMPUTE COP2=LAG(P1COPR).
COMPUTE RCE2=LAG(PRCE).
COMPUTE REA2=LAG(P1REA).
COMPUTE REF2=LAG(P1REFI).
COMPUTE DERE2=LAG(P1DERE).
COMPUTE COP12=LAG(P1COP1).
COMPUTE COP22=LAG(P1COP2).
COMPUTE COP32=LAG(P1COP3).
COMPUTE COP42=LAG(P1COP4).
COMPUTE COP52=LAG(P1COP5).
COMPUTE COP62=LAG(P1COP6).
COMPUTE COP72=LAG(P1COP7).
COMPUTE COP82=LAG(P1COP8).
COMPUTE COP92=LAG(P1COP9).
EXECUTE.

SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).

COMPUTE PRI3=LAG(P1PRIMA).
COMPUTE RC3=LAG(PRRC).
COMPUTE DA3=LAG(PRDA).
COMPUTE AS3=LAG(PRAS).
COMPUTE REC3=LAG(RECA).
COMPUTE COP3=LAG(P1COPR).
COMPUTE RCE3=LAG(PRCE).
COMPUTE REA3=LAG(P1REA).
COMPUTE REF3=LAG(P1REFI).
COMPUTE DERE3=LAG(P1DERE).
COMPUTE COP13=LAG(P1COP1).
COMPUTE COP23=LAG(P1COP2).
COMPUTE COP33=LAG(P1COP3).
COMPUTE COP43=LAG(P1COP4).
COMPUTE COP53=LAG(P1COP5).
COMPUTE COP63=LAG(P1COP6).
COMPUTE COP73=LAG(P1COP7).
COMPUTE COP83=LAG(P1COP8).
COMPUTE COP93=LAG(P1COP9).
COMPUTE PRI4=P1PRIMA.
COMPUTE RC4=PRRC.
COMPUTE DA4=PRDA.
COMPUTE AS4=PRAS.
COMPUTE REC4=RECA.
COMPUTE COP4=P1COPR.
COMPUTE RCE4=PRCE.
COMPUTE REA4=P1REA.
COMPUTE REF4=P1REFI.
COMPUTE DERE4=P1DERE.
COMPUTE COP14=P1COP1.
COMPUTE COP24=P1COP2.
COMPUTE COP34=P1COP3.
COMPUTE COP44=P1COP4.
COMPUTE COP54=P1COP5.
COMPUTE COP64=P1COP6.
COMPUTE COP74=P1COP7.
COMPUTE COP84=P1COP8.
COMPUTE COP94=P1COP9.
IF (IND=1 AND IND2=1) PRI4=P1PRIMA+PRI2.
IF (IND=1 AND IND2=1) RC4=PRRC+RC2.
IF (IND=1 AND IND2=1) DA4=PRDA+DA2.
IF (IND=1 AND IND2=1) AS4=PRAS+AS2.
IF (IND=1 AND IND2=1) REC4=RECA+REC2.
IF (IND=1 AND IND2=1) COP4=P1COPR+COP2.
IF (IND=1 AND IND2=1) RCE4=PRCE+RCE2.
IF (IND=1 AND IND2=1) REA4=P1REA+REA2.
IF (IND=1 AND IND2=1) REF4=P1REFI+REF2.
IF (IND=1 AND IND2=1) DERE4=P1DERE+DERE2.
IF (IND=1 AND IND2=1) COP14=P1COP1+COP12.
IF (IND=1 AND IND2=1) COP24=P1COP2+COP22.
IF (IND=1 AND IND2=1) COP34=P1COP3+COP32.
IF (IND=1 AND IND2=1) COP44=P1COP4+COP42.
IF (IND=1 AND IND2=1) COP54=P1COP5+COP52.
IF (IND=1 AND IND2=1) COP64=P1COP6+COP62.
IF (IND=1 AND IND2=1) COP74=P1COP7+COP72.
IF (IND=1 AND IND2=1) COP84=P1COP8+COP82.
IF (IND=1 AND IND2=1) COP94=P1COP9+COP92.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') PRI4=P1PRIMA+PRI3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') RC4=PRRC+RC3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') DA4=PRDA+DA3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') AS4=PRAS+AS3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') REC4=RECA+REC3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP4=P1COPR+COP3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') RCE4=PRCE+RCE3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') REA4=P1REA+REA3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') REF4=P1REFI+REF3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') DERE4=P1DERE+DERE3.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP14=P1COP1+COP13.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP24=P1COP2+COP23.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP34=P1COP3+COP33.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP44=P1COP4+COP43.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP54=P1COP5+COP53.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP64=P1COP6+COP63.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP74=P1COP7+COP73.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP84=P1COP8+COP83.
IF (P1TIOU=3 AND P1STOU=7 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO. DE VEHICULO(+)') COP94=P1COP9+COP93.
EXECUTE.

COMPUTE P1PRIMA=PRI4*CPT4.
COMPUTE PRRC=RC4*CPT4.
COMPUTE PRDA=DA4*CPT4.
COMPUTE PRAS=AS4*CPT4.
COMPUTE RECA=REC4*CPT4.
COMPUTE P1COPR=COP4*CPT4.
COMPUTE PRCE=RCE4*CPT4.
COMPUTE P1REA=REA4*CPT4.
COMPUTE P1REFI=REF4*CPT4.
COMPUTE P1DERE=DERE4*CPT4.
COMPUTE P1COP1=COP14*CPT4.
COMPUTE P1COP2=COP24*CPT4.
COMPUTE P1COP3=COP34*CPT4.
COMPUTE P1COP4=COP44*CPT4.
COMPUTE P1COP5=COP54*CPT4.
COMPUTE P1COP6=COP64*CPT4.
COMPUTE P1COP7=COP74*CPT4.
COMPUTE P1COP8=COP84*CPT4.
COMPUTE P1COP9=COP94*CPT4.
EXECUTE.

DELETE VARIABLES IND IND2 NBJOUR1 LNB CPT2 CPT3 CPT4 PRI2 PRI3 PRI4 RC2 RC3 RC4 DA2 DA3 DA4 AS2 AS3 AS4 REC2 REC3 REC4 COP2 COP3 COP4 RCE2 RCE3 RCE4
REA2 REA3 REA4 REF2 REF3 REF4 DERE2 DERE3 DERE4 COP12 COP13 COP14 COP22 COP23 COP24 COP32 COP33 COP34 COP42 COP43 COP44 COP52 COP53 COP54
COP62 COP63 COP64 COP72 COP73 COP74 COP82 COP83 COP84 COP92 COP93 COP94.

SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).
CACHE.
EXECUTE.




*--------------------------------------------------------------------------------------------------------------tratamiento de rebajas de sumas aseguradas 302.
SORT CASES BY  P(A) P1VIGD(D) P1SUOP (D).
CACHE.
EXECUTE.
COMPUTE LD=LAG(P1VIGD).
COMPUTE IND=0.
EXECUTE.
DO IF (P=LAG(P) AND LAG(P1TIOU)=3 AND LAG(P1STOU)=2 ).
COMPUTE P1VIGH=LD.
COMPUTE IND=1.
END IF.
EXECUTE.
SORT CASES BY  P(A)  P1VIGD(A) P1SUOP(A).
CACHE.
EXECUTE.
COMPUTE NBJOUR1=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
EXECUTE.

COMPUTE LNB=LAG(NBJOUR).
COMPUTE LNB1=LAG(NBJOUR1).
COMPUTE PRIMA=LAG(P1PRIMA).
COMPUTE RC=LAG(PRRC).
COMPUTE DA=LAG(PRDA).
COMPUTE AS=LAG(PRAS).
COMPUTE RE=LAG(RECA).
COMPUTE COM=LAG(P1COPR).
COMPUTE CE=LAG(PRCE).
COMPUTE REA=LAG(P1REA).
COMPUTE REFI=LAG(P1REFI).
COMPUTE DERE=LAG(P1DERE).
COMPUTE P1=LAG(P1COP1).
COMPUTE P2=LAG(P1COP2).
COMPUTE P3=LAG(P1COP3).
COMPUTE P4=LAG(P1COP4).
COMPUTE P5=LAG(P1COP5).
COMPUTE P6=LAG(P1COP6).
COMPUTE P7=LAG(P1COP7).
COMPUTE P8=LAG(P1COP8).
COMPUTE P9=LAG(P1COP9).

COMPUTE PRIME=0.
COMPUTE RCE=0.
COMPUTE DAE=0.
COMPUTE ASE=0.
COMPUTE REE=0.
COMPUTE COMM=0.
COMPUTE CEE=0.
COMPUTE REAE=0.
COMPUTE REFIE=0.
COMPUTE DEREE=0.
COMPUTE P1E=0.
COMPUTE P2E=0.
COMPUTE P3E=0.
COMPUTE P4E=0.
COMPUTE P5E=0.
COMPUTE P6E=0.
COMPUTE P7E=0.
COMPUTE P8E=0.
COMPUTE P9E=0.
EXECUTE.

DO IF (P=LAG(P) AND P1TIOU=3 AND P1STOU=2 AND LAG(IND)=1).
COMPUTE CPT=LNB1/LNB.
COMPUTE PRIME=(CPT*PRIMA).
COMPUTE RCE=(CPT*RC).
COMPUTE DAE=(CPT*DA).
COMPUTE ASE=(CPT*AS).
COMPUTE REE=(CPT*RE).
COMPUTE COMM=(CPT*COM).
COMPUTE CEE=(CPT*CE).
COMPUTE REAE=(CPT*REA).
COMPUTE REFIE=(CPT*REFI).
COMPUTE DEREE=(CPT*DERE).
COMPUTE P1E=(CPT*P1).
COMPUTE P2E=(CPT*P2).
COMPUTE P3E=(CPT*P3).
COMPUTE P4E=(CPT*P4).
COMPUTE P5E=(CPT*P5).
COMPUTE P6E=(CPT*P6).
COMPUTE P7E=(CPT*P7).
COMPUTE P8E=(CPT*P8).
COMPUTE P9E=(CPT*P9).


COMPUTE P1PRIMA=P1PRIMA+((1-CPT)*PRIMA).
COMPUTE PRRC=PRRC+((1-CPT)*RC).
COMPUTE PRDA=PRDA+((1-CPT)*DA).
COMPUTE PRAS=PRAS+((1-CPT)*AS).
COMPUTE RECA=RECA+((1-CPT)*RE).
COMPUTE P1COPR=P1COPR+((1-CPT)*COM).
COMPUTE PRCE=PRCE+((1-CPT)*CE).
COMPUTE P1REA=P1REA+((1-CPT)*REA).
COMPUTE P1REFI=P1REFI+((1-CPT)*REFI).
COMPUTE P1DERE=P1DERE+((1-CPT)*DERE).
COMPUTE P1COP1=P1COP1+((1-CPT)*P1).
COMPUTE P1COP2=P1COP2+((1-CPT)*P2).
COMPUTE P1COP3=P1COP3+((1-CPT)*P3).
COMPUTE P1COP4=P1COP4+((1-CPT)*P4).
COMPUTE P1COP5=P1COP5+((1-CPT)*P5).
COMPUTE P1COP6=P1COP6+((1-CPT)*P6).
COMPUTE P1COP7=P1COP7+((1-CPT)*P7).
COMPUTE P1COP8=P1COP8+((1-CPT)*P8).
COMPUTE P1COP9=P1COP9+((1-CPT)*P9).
END IF.
COMPUTE NBJOUR=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
EXECUTE.

DELETE VARIABLES NBJOUR1 LNB LNB1 CPT PRIMA RC DA AS RE COM CE REA REFI DERE P1 P2 P3 P4 P5 P6 P7 P8 P9.

SORT CASES BY  P(A) P1VIGD(D) P1SUOP (D).
EXECUTE.
COMPUTE LPR=LAG(PRIME).
COMPUTE LPRRC=LAG(RCE).
COMPUTE LPRDA=LAG(DAE).
COMPUTE LPRAS=LAG(ASE).
COMPUTE LRECA=LAG(REE).
COMPUTE LCOM=LAG(COMM).
COMPUTE LPRCE=LAG(CEE).
COMPUTE LREA=LAG(REAE).
COMPUTE LREFI=LAG(REFIE).
COMPUTE LDERE=LAG(DEREE).
COMPUTE LP1=LAG(P1E).
COMPUTE LP2=LAG(P2E).
COMPUTE LP3=LAG(P3E).
COMPUTE LP4=LAG(P4E).
COMPUTE LP5=LAG(P5E).
COMPUTE LP6=LAG(P6E).
COMPUTE LP7=LAG(P7E).
COMPUTE LP8=LAG(P8E).
COMPUTE LP9=LAG(P9E).
EXECUTE.
DO IF (P=LAG(P) AND LAG(P1TIOU)=3 AND LAG(P1STOU)=2 AND IND=1).

COMPUTE P1PRIMA=LPR.
COMPUTE PRRC=LPRRC.
COMPUTE PRDA=LPRDA.
COMPUTE PRAS=LPRAS.
COMPUTE RECA=LRECA.
COMPUTE P1COPR=LCOM.
COMPUTE PRCE=LPRCE.
COMPUTE P1REA=LREA.
COMPUTE P1REFI=LREFI.
COMPUTE P1DERE=LDERE.
COMPUTE P1COP1=LP1.
COMPUTE P1COP2=LP2.
COMPUTE P1COP3=LP3.
COMPUTE P1COP4=LP4.
COMPUTE P1COP5=LP5.
COMPUTE P1COP6=LP6.
COMPUTE P1COP7=LP7.
COMPUTE P1COP8=LP8.
COMPUTE P1COP9=LP9.
END IF.
EXECUTE.

DELETE VARIABLES PRIME RCE ASE DAE REE COMM IND  LD LPRRC LPRAS LPRDA LRECA LCOM LPR LPRCE LREFI LDERE LREA LP1 LP2 LP3 LP4 LP5 LP6 LP7 LP8 LP9.

SORT CASES BY  P(A) P1VIGD(A) P1SUOP (A).
CACHE.
EXECUTE.


*--------------------------------------------------------------------------------------------------------------tratamiento de aumento de sumas aseguradas 301.
SORT CASES BY  P(A) P1VIGD(D) P1SUOP (D).
CACHE.
EXECUTE.
COMPUTE LD=LAG(P1VIGD).
COMPUTE IND=0.
EXECUTE.
DO IF (P=LAG(P) AND LAG(P1TIOU)=3 AND LAG(P1STOU)=1 ).
COMPUTE P1VIGH=LD.
COMPUTE IND=1.
END IF.
EXECUTE.
SORT CASES BY  P(A)  P1VIGD(A) P1SUOP(A).
CACHE.
EXECUTE.
COMPUTE IND2=0.
IF (P=LAG(P)) IND2=LAG(IND).
EXECUTE.

COMPUTE NBJOUR1=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
EXECUTE.

COMPUTE LNB=LAG(NBJOUR).
COMPUTE LNB1=LAG(NBJOUR1).
COMPUTE PRIMA=LAG(P1PRIMA).
COMPUTE RC=LAG(PRRC).
COMPUTE DA=LAG(PRDA).
COMPUTE AS=LAG(PRAS).
COMPUTE RE=LAG(RECA).
COMPUTE COM=LAG(P1COPR).
COMPUTE CE=LAG(PRCE).
COMPUTE REA=LAG(P1REA).
COMPUTE REFI=LAG(P1REFI).
COMPUTE DERE=LAG(P1DERE).
COMPUTE P1=LAG(P1COP1).
COMPUTE P2=LAG(P1COP2).
COMPUTE P3=LAG(P1COP3).
COMPUTE P4=LAG(P1COP4).
COMPUTE P5=LAG(P1COP5).
COMPUTE P6=LAG(P1COP6).
COMPUTE P7=LAG(P1COP7).
COMPUTE P8=LAG(P1COP8).
COMPUTE P9=LAG(P1COP9).

COMPUTE PRIME=0.
COMPUTE RCE=0.
COMPUTE DAE=0.
COMPUTE ASE=0.
COMPUTE REE=0.
COMPUTE COMM=0.
COMPUTE CEE=0.
COMPUTE REAE=0.
COMPUTE REFIE=0.
COMPUTE DEREE=0.
COMPUTE P1E=0.
COMPUTE P2E=0.
COMPUTE P3E=0.
COMPUTE P4E=0.
COMPUTE P5E=0.
COMPUTE P6E=0.
COMPUTE P7E=0.
COMPUTE P8E=0.
COMPUTE P9E=0.
EXECUTE.

DO IF (P=LAG(P) AND P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)<>'AUMENTO DE SUMA').
COMPUTE CPT=LNB1/LNB.
COMPUTE PRIME=(CPT*PRIMA).
COMPUTE RCE=(CPT*RC).
COMPUTE DAE=(CPT*DA).
COMPUTE ASE=(CPT*AS).
COMPUTE REE=(CPT*RE).
COMPUTE COMM=(CPT*COM).
COMPUTE CEE=(CPT*CE).
COMPUTE REAE=(CPT*REA).
COMPUTE REFIE=(CPT*REFI).
COMPUTE DEREE=(CPT*DERE).
COMPUTE P1E=(CPT*P1).
COMPUTE P2E=(CPT*P2).
COMPUTE P3E=(CPT*P3).
COMPUTE P4E=(CPT*P4).
COMPUTE P5E=(CPT*P5).
COMPUTE P6E=(CPT*P6).
COMPUTE P7E=(CPT*P7).
COMPUTE P8E=(CPT*P8).
COMPUTE P9E=(CPT*P9).


COMPUTE P1PRIMA=P1PRIMA+((1-CPT)*PRIMA).
COMPUTE PRRC=PRRC+((1-CPT)*RC).
COMPUTE PRDA=PRDA+((1-CPT)*DA).
COMPUTE PRAS=PRAS+((1-CPT)*AS).
COMPUTE RECA=RECA+((1-CPT)*RE).
COMPUTE P1COPR=P1COPR+((1-CPT)*COM).
COMPUTE PRCE=PRCE+((1-CPT)*CE).
COMPUTE P1REA=P1REA+((1-CPT)*REA).
COMPUTE P1REFI=P1REFI+((1-CPT)*REFI).
COMPUTE P1DERE=P1DERE+((1-CPT)*DERE).
COMPUTE P1COP1=P1COP1+((1-CPT)*P1).
COMPUTE P1COP2=P1COP2+((1-CPT)*P2).
COMPUTE P1COP3=P1COP3+((1-CPT)*P3).
COMPUTE P1COP4=P1COP4+((1-CPT)*P4).
COMPUTE P1COP5=P1COP5+((1-CPT)*P5).
COMPUTE P1COP6=P1COP6+((1-CPT)*P6).
COMPUTE P1COP7=P1COP7+((1-CPT)*P7).
COMPUTE P1COP8=P1COP8+((1-CPT)*P8).
COMPUTE P1COP9=P1COP9+((1-CPT)*P9).
END IF.

COMPUTE NBJOUR=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
EXECUTE.

DELETE VARIABLES LNB1 CPT PRIMA RC DA AS RE COM CE REA REFI DERE P1 P2 P3 P4 P5 P6 P7 P8 P9.

SORT CASES BY  P(A) P1VIGD(D) P1SUOP (D).
EXECUTE.
COMPUTE LPR=LAG(PRIME).
COMPUTE LPRRC=LAG(RCE).
COMPUTE LPRDA=LAG(DAE).
COMPUTE LPRAS=LAG(ASE).
COMPUTE LRECA=LAG(REE).
COMPUTE LCOM=LAG(COMM).
COMPUTE LPRCE=LAG(CEE).
COMPUTE LREA=LAG(REAE).
COMPUTE LREFI=LAG(REFIE).
COMPUTE LDERE=LAG(DEREE).
COMPUTE LP1=LAG(P1E).
COMPUTE LP2=LAG(P2E).
COMPUTE LP3=LAG(P3E).
COMPUTE LP4=LAG(P4E).
COMPUTE LP5=LAG(P5E).
COMPUTE LP6=LAG(P6E).
COMPUTE LP7=LAG(P7E).
COMPUTE LP8=LAG(P8E).
COMPUTE LP9=LAG(P9E).

EXECUTE.

DO IF (P=LAG(P) AND LAG(P1TIOU)=3 AND LAG(P1STOU)=1 AND IND=1 AND IND2<>1).
COMPUTE P1PRIMA=LPR.
COMPUTE PRRC=LPRRC.
COMPUTE PRDA=LPRDA.
COMPUTE PRAS=LPRAS.
COMPUTE RECA=LRECA.
COMPUTE P1COPR=LCOM.
COMPUTE PRCE=LPRCE.
COMPUTE P1REA=LREA.
COMPUTE P1REFI=LREFI.
COMPUTE P1DERE=LDERE.
COMPUTE P1COP1=LP1.
COMPUTE P1COP2=LP2.
COMPUTE P1COP3=LP3.
COMPUTE P1COP4=LP4.
COMPUTE P1COP5=LP5.
COMPUTE P1COP6=LP6.
COMPUTE P1COP7=LP7.
COMPUTE P1COP8=LP8.
COMPUTE P1COP9=LP9.
END IF.
EXECUTE.
DELETE VARIABLES PRIME RCE ASE DAE REE COMM LD LPRRC LPRAS LPRDA LRECA LCOM LPR CEE REAE REFIE DEREE P1E P2E P3E P4E P5E
 P6E P7E P8E P9E LPRCE LREA LREFI LDERE LP1 LP2 LP3 LP4 LP5 LP6 LP7 LP8 LP9.
SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).
CACHE.
EXECUTE.

COMPUTE CPT2=1.
IF (LNB<>0) CPT2=NBJOUR1/LNB.
COMPUTE CPT3=LAG(CPT2).
COMPUTE CPT4=1.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') CPT4=1-CPT3.
IF (IND=1 AND IND2=1) CPT4=CPT2.
EXECUTE.

SORT CASES BY  P(A)  P1VIGD (D) P1SUOP (D).

COMPUTE PRI2=LAG(P1PRIMA).
COMPUTE RC2=LAG(PRRC).
COMPUTE DA2=LAG(PRDA).
COMPUTE AS2=LAG(PRAS).
COMPUTE REC2=LAG(RECA).
COMPUTE COP2=LAG(P1COPR).
COMPUTE RCE2=LAG(PRCE).
COMPUTE REA2=LAG(P1REA).
COMPUTE REF2=LAG(P1REFI).
COMPUTE DERE2=LAG(P1DERE).
COMPUTE COP12=LAG(P1COP1).
COMPUTE COP22=LAG(P1COP2).
COMPUTE COP32=LAG(P1COP3).
COMPUTE COP42=LAG(P1COP4).
COMPUTE COP52=LAG(P1COP5).
COMPUTE COP62=LAG(P1COP6).
COMPUTE COP72=LAG(P1COP7).
COMPUTE COP82=LAG(P1COP8).
COMPUTE COP92=LAG(P1COP9).
EXECUTE.

SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).

COMPUTE PRI3=LAG(P1PRIMA).
COMPUTE RC3=LAG(PRRC).
COMPUTE DA3=LAG(PRDA).
COMPUTE AS3=LAG(PRAS).
COMPUTE REC3=LAG(RECA).
COMPUTE COP3=LAG(P1COPR).
COMPUTE RCE3=LAG(PRCE).
COMPUTE REA3=LAG(P1REA).
COMPUTE REF3=LAG(P1REFI).
COMPUTE DERE3=LAG(P1DERE).
COMPUTE COP13=LAG(P1COP1).
COMPUTE COP23=LAG(P1COP2).
COMPUTE COP33=LAG(P1COP3).
COMPUTE COP43=LAG(P1COP4).
COMPUTE COP53=LAG(P1COP5).
COMPUTE COP63=LAG(P1COP6).
COMPUTE COP73=LAG(P1COP7).
COMPUTE COP83=LAG(P1COP8).
COMPUTE COP93=LAG(P1COP9).
COMPUTE PRI4=P1PRIMA.
COMPUTE RC4=PRRC.
COMPUTE DA4=PRDA.
COMPUTE AS4=PRAS.
COMPUTE REC4=RECA.
COMPUTE COP4=P1COPR.
COMPUTE RCE4=PRCE.
COMPUTE REA4=P1REA.
COMPUTE REF4=P1REFI.
COMPUTE DERE4=P1DERE.
COMPUTE COP14=P1COP1.
COMPUTE COP24=P1COP2.
COMPUTE COP34=P1COP3.
COMPUTE COP44=P1COP4.
COMPUTE COP54=P1COP5.
COMPUTE COP64=P1COP6.
COMPUTE COP74=P1COP7.
COMPUTE COP84=P1COP8.
COMPUTE COP94=P1COP9.
IF (IND=1 AND IND2=1) PRI4=P1PRIMA+PRI2.
IF (IND=1 AND IND2=1) RC4=PRRC+RC2.
IF (IND=1 AND IND2=1) DA4=PRDA+DA2.
IF (IND=1 AND IND2=1) AS4=PRAS+AS2.
IF (IND=1 AND IND2=1) REC4=RECA+REC2.
IF (IND=1 AND IND2=1) COP4=P1COPR+COP2.
IF (IND=1 AND IND2=1) RCE4=PRCE+RCE2.
IF (IND=1 AND IND2=1) REA4=P1REA+REA2.
IF (IND=1 AND IND2=1) REF4=P1REFI+REF2.
IF (IND=1 AND IND2=1) DERE4=P1DERE+DERE2.
IF (IND=1 AND IND2=1) COP14=P1COP1+COP12.
IF (IND=1 AND IND2=1) COP24=P1COP2+COP22.
IF (IND=1 AND IND2=1) COP34=P1COP3+COP32.
IF (IND=1 AND IND2=1) COP44=P1COP4+COP42.
IF (IND=1 AND IND2=1) COP54=P1COP5+COP52.
IF (IND=1 AND IND2=1) COP64=P1COP6+COP62.
IF (IND=1 AND IND2=1) COP74=P1COP7+COP72.
IF (IND=1 AND IND2=1) COP84=P1COP8+COP82.
IF (IND=1 AND IND2=1) COP94=P1COP9+COP92.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') PRI4=P1PRIMA+PRI3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') RC4=PRRC+RC3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') DA4=PRDA+DA3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') AS4=PRAS+AS3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') REC4=RECA+REC3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP4=P1COPR+COP3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') RCE4=PRCE+RCE3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') REA4=P1REA+REA3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') REF4=P1REFI+REF3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') DERE4=P1DERE+DERE3.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP14=P1COP1+COP13.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP24=P1COP2+COP23.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP34=P1COP3+COP33.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP44=P1COP4+COP43.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP54=P1COP5+COP53.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP64=P1COP6+COP63.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP74=P1COP7+COP73.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP84=P1COP8+COP83.
IF (P1TIOU=3 AND P1STOU=1 AND LAG(IND)=1 AND LAG(P1DSOP)='AUMENTO DE SUMA') COP94=P1COP9+COP93.
EXECUTE.

COMPUTE P1PRIMA=PRI4*CPT4.
COMPUTE PRRC=RC4*CPT4.
COMPUTE PRDA=DA4*CPT4.
COMPUTE PRAS=AS4*CPT4.
COMPUTE RECA=REC4*CPT4.
COMPUTE P1COPR=COP4*CPT4.
COMPUTE PRCE=RCE4*CPT4.
COMPUTE P1REA=REA4*CPT4.
COMPUTE P1REFI=REF4*CPT4.
COMPUTE P1DERE=DERE4*CPT4.
COMPUTE P1COP1=COP14*CPT4.
COMPUTE P1COP2=COP24*CPT4.
COMPUTE P1COP3=COP34*CPT4.
COMPUTE P1COP4=COP44*CPT4.
COMPUTE P1COP5=COP54*CPT4.
COMPUTE P1COP6=COP64*CPT4.
COMPUTE P1COP7=COP74*CPT4.
COMPUTE P1COP8=COP84*CPT4.
COMPUTE P1COP9=COP94*CPT4.
EXECUTE.

DELETE VARIABLES IND IND2 NBJOUR1 LNB CPT2 CPT3 CPT4 PRI2 PRI3 PRI4 RC2 RC3 RC4 DA2 DA3 DA4 AS2 AS3 AS4 REC2 REC3 REC4 COP2 COP3 COP4 RCE2 RCE3 RCE4
REA2 REA3 REA4 REF2 REF3 REF4 DERE2 DERE3 DERE4 COP12 COP13 COP14 COP22 COP23 COP24 COP32 COP33 COP34 COP42 COP43 COP44 COP52 COP53 COP54
COP62 COP63 COP64 COP72 COP73 COP74 COP82 COP83 COP84 COP92 COP93 COP94.

SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).
CACHE.
EXECUTE.


*--------------------------------------------------------------------------------------------------------------tratamiento de cambios de coberturas 303.SORT CASES BY P(A) P1VIGD (D) P1SUOP(D).
CACHE.
EXECUTE.
COMPUTE LD=LAG(P1VIGD).
COMPUTE IND=0.
EXECUTE.
DO IF (P=LAG(P) AND LAG(P1TIOU)=3 AND LAG(P1STOU)=3 ).
COMPUTE P1VIGH=LD.
COMPUTE IND=1.
END IF.
EXECUTE.
SORT CASES BY  P(A) P1VIGD(A)  P1SUOP(A).
EXECUTE.

COMPUTE IND2=0.
IF (P=LAG(P)) IND2=LAG(IND).
EXECUTE.

COMPUTE NBJOUR1=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
EXECUTE.

COMPUTE LNB=LAG(NBJOUR).
COMPUTE LNB1=LAG(NBJOUR1).
COMPUTE PRIMA=LAG(P1PRIMA).
COMPUTE RC=LAG(PRRC).
COMPUTE DA=LAG(PRDA).
COMPUTE AS=LAG(PRAS).
COMPUTE RE=LAG(RECA).
COMPUTE COM=LAG(P1COPR).
COMPUTE CE=LAG(PRCE).
COMPUTE REA=LAG(P1REA).
COMPUTE REFI=LAG(P1REFI).
COMPUTE DERE=LAG(P1DERE).
COMPUTE P1=LAG(P1COP1).
COMPUTE P2=LAG(P1COP2).
COMPUTE P3=LAG(P1COP3).
COMPUTE P4=LAG(P1COP4).
COMPUTE P5=LAG(P1COP5).
COMPUTE P6=LAG(P1COP6).
COMPUTE P7=LAG(P1COP7).
COMPUTE P8=LAG(P1COP8).
COMPUTE P9=LAG(P1COP9).

COMPUTE PRIME=0.
COMPUTE RCE=0.
COMPUTE DAE=0.
COMPUTE ASE=0.
COMPUTE REE=0.
COMPUTE COMM=0.
COMPUTE CEE=0.
COMPUTE REAE=0.
COMPUTE REFIE=0.
COMPUTE DEREE=0.
COMPUTE P1E=0.
COMPUTE P2E=0.
COMPUTE P3E=0.
COMPUTE P4E=0.
COMPUTE P5E=0.
COMPUTE P6E=0.
COMPUTE P7E=0.
COMPUTE P8E=0.
COMPUTE P9E=0.
EXECUTE.

DO IF (P=LAG(P) AND P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)<>'CBIO.COBERTURA(+)').
COMPUTE CPT=LNB1/LNB.
COMPUTE PRIME=(CPT*PRIMA).
COMPUTE RCE=(CPT*RC).
COMPUTE DAE=(CPT*DA).
COMPUTE ASE=(CPT*AS).
COMPUTE REE=(CPT*RE).
COMPUTE COMM=(CPT*COM).
COMPUTE CEE=(CPT*CE).
COMPUTE REAE=(CPT*REA).
COMPUTE REFIE=(CPT*REFI).
COMPUTE DEREE=(CPT*DERE).
COMPUTE P1E=(CPT*P1).
COMPUTE P2E=(CPT*P2).
COMPUTE P3E=(CPT*P3).
COMPUTE P4E=(CPT*P4).
COMPUTE P5E=(CPT*P5).
COMPUTE P6E=(CPT*P6).
COMPUTE P7E=(CPT*P7).
COMPUTE P8E=(CPT*P8).
COMPUTE P9E=(CPT*P9).


COMPUTE P1PRIMA=P1PRIMA+((1-CPT)*PRIMA).
COMPUTE PRRC=PRRC+((1-CPT)*RC).
COMPUTE PRDA=PRDA+((1-CPT)*DA).
COMPUTE PRAS=PRAS+((1-CPT)*AS).
COMPUTE RECA=RECA+((1-CPT)*RE).
COMPUTE P1COPR=P1COPR+((1-CPT)*COM).
COMPUTE PRCE=PRCE+((1-CPT)*CE).
COMPUTE P1REA=P1REA+((1-CPT)*REA).
COMPUTE P1REFI=P1REFI+((1-CPT)*REFI).
COMPUTE P1DERE=P1DERE+((1-CPT)*DERE).
COMPUTE P1COP1=P1COP1+((1-CPT)*P1).
COMPUTE P1COP2=P1COP2+((1-CPT)*P2).
COMPUTE P1COP3=P1COP3+((1-CPT)*P3).
COMPUTE P1COP4=P1COP4+((1-CPT)*P4).
COMPUTE P1COP5=P1COP5+((1-CPT)*P5).
COMPUTE P1COP6=P1COP6+((1-CPT)*P6).
COMPUTE P1COP7=P1COP7+((1-CPT)*P7).
COMPUTE P1COP8=P1COP8+((1-CPT)*P8).
COMPUTE P1COP9=P1COP9+((1-CPT)*P9).
END IF.

COMPUTE NBJOUR=CTIME.DAYS(P1VIGH)-CTIME.DAYS(P1VIGD).
EXECUTE.

DELETE VARIABLES LNB1 CPT PRIMA RC DA AS RE COM CE REA REFI DERE P1 P2 P3 P4 P5 P6 P7 P8 P9.

SORT CASES BY  P(A)  P1VIGD (D) P1SUOP (D).
EXECUTE.
COMPUTE LPR=LAG(PRIME).
COMPUTE LPRRC=LAG(RCE).
COMPUTE LPRDA=LAG(DAE).
COMPUTE LPRAS=LAG(ASE).
COMPUTE LRECA=LAG(REE).
COMPUTE LCOM=LAG(COMM).
COMPUTE LPRCE=LAG(CEE).
COMPUTE LREA=LAG(REAE).
COMPUTE LREFI=LAG(REFIE).
COMPUTE LDERE=LAG(DEREE).
COMPUTE LP1=LAG(P1E).
COMPUTE LP2=LAG(P2E).
COMPUTE LP3=LAG(P3E).
COMPUTE LP4=LAG(P4E).
COMPUTE LP5=LAG(P5E).
COMPUTE LP6=LAG(P6E).
COMPUTE LP7=LAG(P7E).
COMPUTE LP8=LAG(P8E).
COMPUTE LP9=LAG(P9E).

EXECUTE.

DO IF (P=LAG(P) AND LAG(P1TIOU)=3 AND LAG(P1STOU)=3 AND IND=1 AND IND2<>1).
COMPUTE P1PRIMA=LPR.
COMPUTE PRRC=LPRRC.
COMPUTE PRDA=LPRDA.
COMPUTE PRAS=LPRAS.
COMPUTE RECA=LRECA.
COMPUTE P1COPR=LCOM.
COMPUTE PRCE=LPRCE.
COMPUTE P1REA=LREA.
COMPUTE P1REFI=LREFI.
COMPUTE P1DERE=LDERE.
COMPUTE P1COP1=LP1.
COMPUTE P1COP2=LP2.
COMPUTE P1COP3=LP3.
COMPUTE P1COP4=LP4.
COMPUTE P1COP5=LP5.
COMPUTE P1COP6=LP6.
COMPUTE P1COP7=LP7.
COMPUTE P1COP8=LP8.
COMPUTE P1COP9=LP9.
END IF.
EXECUTE.
DELETE VARIABLES PRIME RCE ASE DAE REE COMM LD LPRRC LPRAS LPRDA LRECA LCOM LPR CEE REAE REFIE DEREE P1E P2E P3E P4E P5E
 P6E P7E P8E P9E LPRCE LREA LREFI LDERE LP1 LP2 LP3 LP4 LP5 LP6 LP7 LP8 LP9.
SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).
CACHE.
EXECUTE.

COMPUTE CPT2=1.
IF (LNB<>0) CPT2=NBJOUR1/LNB.
COMPUTE CPT3=LAG(CPT2).
COMPUTE CPT4=1.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') CPT4=1-CPT3.
IF (IND=1 AND IND2=1) CPT4=CPT2.
EXECUTE.

SORT CASES BY  P(A)  P1VIGD (D) P1SUOP (D).

COMPUTE PRI2=LAG(P1PRIMA).
COMPUTE RC2=LAG(PRRC).
COMPUTE DA2=LAG(PRDA).
COMPUTE AS2=LAG(PRAS).
COMPUTE REC2=LAG(RECA).
COMPUTE COP2=LAG(P1COPR).
COMPUTE RCE2=LAG(PRCE).
COMPUTE REA2=LAG(P1REA).
COMPUTE REF2=LAG(P1REFI).
COMPUTE DERE2=LAG(P1DERE).
COMPUTE COP12=LAG(P1COP1).
COMPUTE COP22=LAG(P1COP2).
COMPUTE COP32=LAG(P1COP3).
COMPUTE COP42=LAG(P1COP4).
COMPUTE COP52=LAG(P1COP5).
COMPUTE COP62=LAG(P1COP6).
COMPUTE COP72=LAG(P1COP7).
COMPUTE COP82=LAG(P1COP8).
COMPUTE COP92=LAG(P1COP9).
EXECUTE.

SORT CASES BY  P(A)  P1VIGD (A) P1SUOP (A).

COMPUTE PRI3=LAG(P1PRIMA).
COMPUTE RC3=LAG(PRRC).
COMPUTE DA3=LAG(PRDA).
COMPUTE AS3=LAG(PRAS).
COMPUTE REC3=LAG(RECA).
COMPUTE COP3=LAG(P1COPR).
COMPUTE RCE3=LAG(PRCE).
COMPUTE REA3=LAG(P1REA).
COMPUTE REF3=LAG(P1REFI).
COMPUTE DERE3=LAG(P1DERE).
COMPUTE COP13=LAG(P1COP1).
COMPUTE COP23=LAG(P1COP2).
COMPUTE COP33=LAG(P1COP3).
COMPUTE COP43=LAG(P1COP4).
COMPUTE COP53=LAG(P1COP5).
COMPUTE COP63=LAG(P1COP6).
COMPUTE COP73=LAG(P1COP7).
COMPUTE COP83=LAG(P1COP8).
COMPUTE COP93=LAG(P1COP9).
COMPUTE PRI4=P1PRIMA.
COMPUTE RC4=PRRC.
COMPUTE DA4=PRDA.
COMPUTE AS4=PRAS.
COMPUTE REC4=RECA.
COMPUTE COP4=P1COPR.
COMPUTE RCE4=PRCE.
COMPUTE REA4=P1REA.
COMPUTE REF4=P1REFI.
COMPUTE DERE4=P1DERE.
COMPUTE COP14=P1COP1.
COMPUTE COP24=P1COP2.
COMPUTE COP34=P1COP3.
COMPUTE COP44=P1COP4.
COMPUTE COP54=P1COP5.
COMPUTE COP64=P1COP6.
COMPUTE COP74=P1COP7.
COMPUTE COP84=P1COP8.
COMPUTE COP94=P1COP9.
IF (IND=1 AND IND2=1) PRI4=P1PRIMA+PRI2.
IF (IND=1 AND IND2=1) RC4=PRRC+RC2.
IF (IND=1 AND IND2=1) DA4=PRDA+DA2.
IF (IND=1 AND IND2=1) AS4=PRAS+AS2.
IF (IND=1 AND IND2=1) REC4=RECA+REC2.
IF (IND=1 AND IND2=1) COP4=P1COPR+COP2.
IF (IND=1 AND IND2=1) RCE4=PRCE+RCE2.
IF (IND=1 AND IND2=1) REA4=P1REA+REA2.
IF (IND=1 AND IND2=1) REF4=P1REFI+REF2.
IF (IND=1 AND IND2=1) DERE4=P1DERE+DERE2.
IF (IND=1 AND IND2=1) COP14=P1COP1+COP12.
IF (IND=1 AND IND2=1) COP24=P1COP2+COP22.
IF (IND=1 AND IND2=1) COP34=P1COP3+COP32.
IF (IND=1 AND IND2=1) COP44=P1COP4+COP42.
IF (IND=1 AND IND2=1) COP54=P1COP5+COP52.
IF (IND=1 AND IND2=1) COP64=P1COP6+COP62.
IF (IND=1 AND IND2=1) COP74=P1COP7+COP72.
IF (IND=1 AND IND2=1) COP84=P1COP8+COP82.
IF (IND=1 AND IND2=1) COP94=P1COP9+COP92.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') PRI4=P1PRIMA+PRI3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') RC4=PRRC+RC3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') DA4=PRDA+DA3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') AS4=PRAS+AS3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') REC4=RECA+REC3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP4=P1COPR+COP3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') RCE4=PRCE+RCE3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') REA4=P1REA+REA3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') REF4=P1REFI+REF3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') DERE4=P1DERE+DERE3.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP14=P1COP1+COP13.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP24=P1COP2+COP23.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP34=P1COP3+COP33.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP44=P1COP4+COP43.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP54=P1COP5+COP53.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP64=P1COP6+COP63.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP74=P1COP7+COP73.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP84=P1COP8+COP83.
IF (P1TIOU=3 AND P1STOU=3 AND LAG(IND)=1 AND LAG(P1DSOP)='CBIO.COBERTURA(+)') COP94=P1COP9+COP93.
EXECUTE.

COMPUTE P1PRIMA=PRI4*CPT4.
COMPUTE PRRC=RC4*CPT4.
COMPUTE PRDA=DA4*CPT4.
COMPUTE PRAS=AS4*CPT4.
COMPUTE RECA=REC4*CPT4.
COMPUTE P1COPR=COP4*CPT4.
COMPUTE PRCE=RCE4*CPT4.
COMPUTE P1REA=REA4*CPT4.
COMPUTE P1REFI=REF4*CPT4.
COMPUTE P1DERE=DERE4*CPT4.
COMPUTE P1COP1=COP14*CPT4.
COMPUTE P1COP2=COP24*CPT4.
COMPUTE P1COP3=COP34*CPT4.
COMPUTE P1COP4=COP44*CPT4.
COMPUTE P1COP5=COP54*CPT4.
COMPUTE P1COP6=COP64*CPT4.
COMPUTE P1COP7=COP74*CPT4.
COMPUTE P1COP8=COP84*CPT4.
COMPUTE P1COP9=COP94*CPT4.
EXECUTE.

DELETE VARIABLES IND IND2 NBJOUR1 LNB CPT2 CPT3 CPT4 PRI2 PRI3 PRI4 RC2 RC3 RC4 DA2 DA3 DA4 AS2 AS3 AS4 REC2 REC3 REC4 COP2 COP3 COP4 RCE2 RCE3 RCE4
REA2 REA3 REA4 REF2 REF3 REF4 DERE2 DERE3 DERE4 COP12 COP13 COP14 COP22 COP23 COP24 COP32 COP33 COP34 COP42 COP43 COP44 COP52 COP53 COP54
COP62 COP63 COP64 COP72 COP73 COP74 COP82 COP83 COP84 COP92 COP93 COP94 PTOT J ANUL.

SORT CASES BY  P(A) P1VIGD (A)  P1SUOP (A).
CACHE.
EXECUTE.


*------------------------------------------------------------------------------------------------------------------------------------------salva PAU.
SAVE OUTFILE= 'S:\SPSS\Autos\Bases\PAU.sav'
/COMPRESSED.




*-------------------------------------------------------------------------------------------------------------------------------------------------------------SINIESTROS.
GET DATA  
 /TYPE = TXT 
 /FILE = 'S:\DSKAUTS.txt'
 /FIXCASE = 1
 /ARRANGEMENT = FIXED
 /FIRSTCASE = 1
 /IMPORTCASE = ALL
 /VARIABLES =
 /1  W1POLIZ 0-6 F7.2
 W1OPER 7-13 F7.2
 W1SINI 14-20 F7.2
 W1POCO 21-24 F4.2
 W1HECS 25-25 F1.0
 W1RECL 26-28 F3.2
 WWRESI1 29-41 F13.2
 S1 42-42 A1
 WWPAGI1 43-55 F13.2
 S2 56-56 A1
 WWRESG1 57-69 F13.2
 S3 70-70 A1
 WWPAGG1 71-83 F13.2
 S4 84-84 A1
 W1POST 85-89 F5.2
 W1ESTA 90-90 F1.0
 W1FTER1 91-94 F4.0
 W1FTER2 95-96 F2.0
 W1FTER3 97-98 F2.0
 W1FSIN1 99-100 F2.0 
 W1FSIN2 101-102 F2.0
 W1FSIN3 103-106 F4.0
 W1FDEN1 107-108 F2.0
 W1FDEN2 109-110 F2.0
 W1FDEN3 111-114 F4.0
 W1LESI 115-115 A1
 W1EDAD 116-117 F2.1
 W1SEXO 118-118 A1
 W1ECIV 119-119 A1
 W1FREQ 120-121 A2
 W1SUOP 122-124 F3.2
 W1CAUC 125-128 F4.0
 W1COPS 129-129 F1.0
 W1RAMA 130-131 F2.0
 W1ARCD 132-137 F6.0
 W1SPOL 138-146 F9.0

 .
CACHE.
EXECUTE.
COMPUTE W1FTER=DATE.DMY(1,1,1950).
EXECUTE.
IF (W1FTER1 NE 0) W1FTER = DATE.DMY(W1FTER3,W1FTER2,W1FTER1) .
COMPUTE W1FSIN = DATE.DMY(W1FSIN1,W1FSIN2,W1FSIN3) .
COMPUTE W1FDEN = DATE.DMY(W1FDEN1,W1FDEN2,W1FDEN3) .
FORMATS W1FSIN (EDATE10).
FORMATS W1FDEN (EDATE10).
FORMATS W1FTER (EDATE10).
EXECUTE.

IF (S1 = '+') WWRESI= WWRESI1 .
IF (S1 NE '+') WWRESI= - WWRESI1 .
IF (S2 = '+') WWPAGI= WWPAGI1 .
IF (S2 NE '+') WWPAGI= - WWPAGI1 .
IF (S3 = '+') WWRESG= WWRESG1 .
IF (S3 NE '+') WWRESG= - WWRESG1 .
IF (S4 = '+') WWPAGG= WWPAGG1 .
IF (S4 NE '+') WWPAGG= - WWPAGG1 .
COMPUTE PAGO=WWPAGI+WWPAGG .
COMPUTE SAP=WWRESI+WWRESG .
COMPUTE CARGA=PAGO+SAP .
EXECUTE .

DELETE VARIABLES W1FSIN1 W1FSIN2 W1FSIN3 W1FDEN1 W1FDEN2 W1FDEN3 W1FTER1 W1FTER2 W1FTER3  
WWPAGI1 WWPAGG1 WWRESI1 WWRESG1 S1 S2 S3 S4.
CACHE.
EXECUTE.



*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------tabla HGEN..
SORT CASES BY W1HECS W1CAUC.
MATCH FILES /FILE=*
/TABLE='S:\SPSS\Tablas de sistema\Bases\HGEN.SAV'
/RENAME P1HECS=W1HECS P1CAUC=W1CAUC
/BY W1HECS W1CAUC.
EXECUTE.


*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------tabla localidades..
SORT CASES BY W1POST W1COPS.
SAVE OUTFILE= 'S:\SPSS\Autos\Bases\SAU.sav'.

MATCH FILES /FILE=*
/TABLE='S:\SPSS\Tablas de sistema\Bases\GNTLOC.SAV'
/RENAME PSCOPO=W1POST PSCOPS=W1COPS
/BY W1POST W1COPS.
EXECUTE.

RENAME VARIABLES LOCALIDADCORREGIDA=LOCALIDAD.
RENAME VARIABLES PROVINCIACORREGIDA=PROVINCIA.

DELETE VARIABLES PSZONT PSZONR  LATITUDLONGITUD COMUNA BARRIOCABA ZONAAMBA CORDON LATITUDPROMEDIOPARTIDO LONGITUDPROMEDIOPARTIDO.
EXECUTE.



*---------------------------------------------------------------------------------------------------------------------------------------------------------------------------salva SAU.
SAVE OUTFILE= 'S:\SPSS\AUTOS\Bases\SAU.sav'
 /COMPRESSED.






*--------------------------------------------------------------------------------------------------------------------------------------------------------------------base juntas.

GET FILE='S:\SPSS\AUTOS\Bases\EAU.sav'.
CACHE.
EXECUTE.

SORT CASES BY P1POLI(A) P1POCO(A) P1SUOP(A).
CACHE.

COMPUTE PPP=P1POLI*100000+P1POCO*1000+P1SUOP.
COMPUTE LPPP=LAG(PPP).
EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF(PPP NE LPPP).
EXECUTE .
DELETE VARIABLES PPP LPPP.
CACHE.
EXECUTE.
SAVE OUTFILE='S:\SPSS\AUTOS\Temp\TABLE1.sav'.

* Identify Duplicate Cases.
SORT CASES BY P1POLI(A) P1POCO(A) .
MATCH FILES /FILE = *  /BY P1POLI P1POCO
 /FIRST = FIRST .
VARIABLE LABELS FIRST 'Indicator of each first matching case as Primary' .
VALUE LABELS FIRST 0 'Duplicate Case' 1 'Primary Case'.
VARIABLE LEVEL FIRST (ORDINAL).
EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF(FIRST=1).
EXECUTE .
DELETE VARIABLES FIRST.
SAVE OUTFILE='S:\SPSS\AUTOS\Temp\TABLE2.sav'.

* Identify Duplicate Cases.
SORT CASES BY P1POLI(A).
MATCH FILES /FILE = *  /BY P1POLI 
 /FIRST = FIRST .
VARIABLE LABELS FIRST 'Indicator of each first matching case as Primary' .
VALUE LABELS FIRST 0 'Duplicate Case' 1 'Primary Case'.
VARIABLE LEVEL FIRST (ORDINAL).
EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF(FIRST=1).
EXECUTE .
DELETE VARIABLES FIRST.
SAVE OUTFILE='S:\SPSS\AUTOS\Temp\TABLE3.sav'.


GET  FILE= 'S:\SPSS\AUTOS\Bases\SAU.sav'.
SORT CASES BY W1POLIZ(A) W1POCO(A) W1SUOP(A).
EXECUTE. 
CACHE.
EXECUTE.

DELETE VARIABLES LOCALIDAD PROVINCIA LATITUD LONGITUD PARTIDO ZONAACTUARIAL.

MATCH FILES /FILE=*
 /TABLE='S:\SPSS\AUTOS\Temp\TABLE1.sav'
 /RENAME  P1POLI=W1POLIZ P1POCO=W1POCO P1SUOP=W1SUOP
 /BY W1POLIZ W1POCO W1SUOP.
EXECUTE.
CACHE.
EXECUTE.

SAVE OUTFILE='S:\SPSS\AUTOS\Temp\JAU1.sav'.

FILTER OFF.
USE ALL.
SELECT IF(SYSMIS(P1OPER)).
EXECUTE .
DELETE VARIABLES P1OPER ENDOSO P1TIOU P1STOU P1DURA P1MODF P1FLOT P1CPRO P1COBL 
P1POST P1VHCT P1VHAN P1CATE P1VHUV P1VHMC P1VHMO P1VHCS P1VHCR P1VHTU P1VHDI 
P1VHVU P1GARA P1ALAR P1EDAD P1SEXO P1PROF P1ESCI P1ANTI P1SITU P1ZONA P1RCAC 
P1PRIMA PRRC PRDA PRAS RECA P1COPR PRCABE PROD CSP P1CAPI P1VAR1 P1VAR2 P1LOJA P1PVLE 
P1PVNU P1PNLE P1PNNU P1MTDF P1PAT P1FEMI P1FEM1 P1VIGD P1VIGH NBJOUR P1CHAS P1MOTO P1ORIG P1REA P1REFI P1DERE
P1COP1 P1NIV2 P1COP2 P1COP3 P1NIV4 P1COP4 P1NIV5 P1COP5 P1NIV6 P1COP6 P1NIV7 P1COP7 P1NIV8 P1COP8 P1NIV9 P1COP9
P1CTRE PRCE P1XPRO P1ASEN P1IFRA P1SCTA P1TARC MM DTO_AG DTO_BR DTO_CI DTO_COBA DTO_DC DTO_DI
DTO_IT DTO_KM1 DTO_KM2 DTO_LJ DTO_MC DTO_MM DTO_OT MARCA_KM2 MARCA_OT MARCA_KM1 MARCA_AG MARCA_BR MARCA_CI
MARCA_MM MARCA_DC MARCA_DI MARCA_IT MARCA_LJ MARCA_MC  MARCA_COBA LOCALIDAD PROVINCIA PARTIDO ZONAACTUARIAL.

SORT CASES BY W1POLIZ(A) W1POCO(A).
MATCH FILES /FILE=*
 /TABLE='S:\SPSS\AUTOS\Temp\TABLE2.sav'
 /RENAME  P1POLI=W1POLIZ P1POCO=W1POCO
 /BY W1POLIZ W1POCO.
EXECUTE.
DELETE VARIABLES P1SUOP.
CACHE.
EXECUTE.

SAVE OUTFILE='S:\SPSS\AUTOS\Temp\JAU2.sav'.


FILTER OFF.
USE ALL.
SELECT IF(SYSMIS(P1OPER)).
EXECUTE .
DELETE VARIABLES P1OPER ENDOSO P1TIOU P1STOU P1DURA P1MODF P1FLOT P1CPRO P1COBL 
P1POST P1VHCT P1VHAN P1CATE P1VHUV P1VHMC P1VHMO P1VHCS P1VHCR P1VHTU P1VHDI 
P1VHVU P1GARA P1ALAR P1EDAD P1SEXO P1PROF P1ESCI P1ANTI P1SITU P1ZONA P1RCAC 
P1PRIMA PRRC PRDA PRAS RECA P1COPR PRCABE PROD CSP P1CAPI P1VAR1 P1VAR2 P1LOJA P1PVLE 
P1PVNU P1PNLE P1PNNU P1MTDF P1PAT P1FEMI P1FEM1 P1VIGD P1VIGH NBJOUR P1CHAS P1MOTO P1ORIG P1REA P1REFI P1DERE
P1COP1 P1NIV2 P1COP2 P1COP3 P1NIV4 P1COP4 P1NIV5 P1COP5 P1NIV6 P1COP6 P1NIV7 P1COP7 P1NIV8 P1COP8 P1NIV9 P1COP9
P1CTRE PRCE P1XPRO P1ASEN P1IFRA P1SCTA P1TARC  MM DTO_AG DTO_BR DTO_CI DTO_COBA DTO_DC DTO_DI
DTO_IT DTO_KM1 DTO_KM2 DTO_LJ DTO_MC DTO_MM DTO_OT MARCA_KM2 MARCA_OT MARCA_KM1 MARCA_AG MARCA_BR MARCA_CI
MARCA_MM MARCA_DC MARCA_DI MARCA_IT MARCA_LJ MARCA_MC  MARCA_COBA.

SORT CASES BY W1POLIZ(A).
MATCH FILES /FILE=*
 /TABLE='S:\SPSS\AUTOS\Temp\TABLE3.sav'
 /RENAME  P1POLI=W1POLIZ 
 /BY W1POLIZ.
EXECUTE.
DELETE VARIABLES P1SUOP P1POCO.
CACHE.
EXECUTE.

SAVE OUTFILE='S:\SPSS\AUTOS\Temp\JAU3.sav'.



GET FILE='S:\SPSS\AUTOS\Temp\JAU1.sav'.
CACHE.
EXECUTE.
COMPUTE J=1.
IF(SYSMIS(P1OPER)) J=0.
EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF(J=1).
EXECUTE .
DELETE VARIABLES J.
CACHE.
EXECUTE.
SAVE OUTFILE='S:\SPSS\AUTOS\Temp\JAU1.sav'.


GET FILE='S:\SPSS\AUTOS\Temp\JAU2.sav'.
CACHE.
EXECUTE.
COMPUTE J=1.
IF(SYSMIS(P1OPER)) J=0.
EXECUTE.
FILTER OFF.
USE ALL.
SELECT IF(J=1).
EXECUTE .
DELETE VARIABLES J.
CACHE.
EXECUTE.
SAVE OUTFILE='S:\SPSS\AUTOS\Temp\JAU2.sav'.


ADD FILES /FILE=* /FILE='S:\SPSS\AUTOS\Temp\JAU3.sav'.
EXECUTE.
CACHE.
EXECUTE.


ADD FILES /FILE=* /FILE='S:\SPSS\AUTOS\Temp\JAU1.sav'.
EXECUTE.
CACHE.
EXECUTE.


SORT CASES BY W1SINI(A) CARGA(D).

	
CACHE.
EXECUTE.

*---------------------------------------------------------------------------------------------------------------------------------------------------------------------------salva.
SAVE OUTFILE= 'S:\SPSS\AUTOS\Bases\JAU.sav'
 /COMPRESSED.




*---------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grabo Controles.

*---------------------------------------------------------------------------------------------------------------------------------------------------------------------------Causa de las diferencias de prima. 

GET FILE='S:\SPSS\AUTOS\Bases\EAU.SAV'.

SORT CASES BY P1POLI P1POCO P1SUOP.

SELECT IF P1PRIMA<>0.

COMPUTE C1=0.
IF (P1POLI=LAG(P1POLI) AND P1POCO=LAG(P1POCO) AND P1TIOU=LAG(P1TIOU) AND P1STOU=LAG(P1STOU) AND P1STOU<>90 AND P1PRIMA<>0 AND LAG(P1PRIMA)<>0 AND P1VIGD<>LAG(P1VIGD)) C1=1.
IF (P1POLI=LAG(P1POLI) AND P1POCO=LAG(P1POCO) AND P1TIOU=3 AND (P1STOU=1 OR P1STOU=10) AND LAG(P1STOU)=2 AND P1PRIMA<>0 AND LAG(P1PRIMA)<>0 AND P1VIGD<>LAG(P1VIGD)) C1=2.
IF (P1POLI=LAG(P1POLI) AND P1POCO=LAG(P1POCO) AND P1VIGH=LAG(P1VIGH) AND P1VIGD<LAG(P1VIGD) AND (LAG(P1STOU)=0 OR LAG(P1STOU)=11)) C1=3.
EXECUTE.

AGGREGATE OUTFILE=*
/BREAK P1POLI P1POCO
/PRIMAE=SUM(P1PRIMA)
/C2=MAX(C1).
EXECUTE.

MATCH FILES /FILE='S:\SPSS\AUTOS\Bases\PAU.SAV'
/TABLE=*
/BY P1POLI P1POCO.
EXECUTE.

AGGREGATE OUTFILE=*
MODE ADDVARIABLES
/BREAK P1POLI P1POCO
/PRIMAP=SUM(P1PRIMA).

COMPUTE DIF=PRIMAE-PRIMAP.
EXECUTE.

IF (DIF>1 AND C2=0) C2=4.
EXECUTE.

STRING COM (A50).
IF (C2=1) COM='DOS ENDOSOS DEL MISMO TIPO SEGUIDOS'.
IF (C2=2) COM='AUMENTO DE SA-BAJA DE SA-AUMENTO DE SA'.
IF (C2=3) COM='ENDOSO ANTERIOR AL INICIO DE VIGENCIA'.
IF (C2=4) COM='OTRO'.
EXECUTE.

SELECT IF DIF>1.

AGGREGATE OUTFILE='S:\SPSS\AUTOS\Temp\Dif de prima.sav'
/BREAK P1POLI P1POCO COM
/DIFERENCIA=MAX(DIF).
EXECUTE.



*---------------------------------------------------------------------------------------------------------------------------------------------------------------------------Rehabilitaciones con distinta fecha que la anulacion.
 
GET FILE='S:\SPSS\AUTOS\Bases\EAU.SAV'.

SELECT IF P1STOU=90.

AGGREGATE OUTFILE=*
/BREAK P1POLI P1POCO P1SUOP P1VIGD P1VIGH P1XPRO
/PRIMA=SUM(P1PRIMA).
EXECUTE.

COMPUTE P1PRIMA=-1*PRIMA.
EXECUTE.

DELETE VARIABLES P1SUOP.

RENAME VARIABLES P1XPRO=P1SUOP P1VIGD=VIGD P1VIGH=VIGH.

SORT CASES BY P1POLI P1POCO P1SUOP P1PRIMA.

COMPUTE REP=0.
IF (P1POLI=LAG(P1POLI) AND P1POCO=LAG(P1POCO) AND P1SUOP=LAG(P1SUOP) AND P1PRIMA=LAG(P1PRIMA)) REP=1.
EXECUTE.

SELECT IF REP=0.
EXECUTE.

DELETE VARIABLES REP.

SORT CASES BY P1POLI P1POCO P1SUOP P1PRIMA.

MATCH FILES /FILE='S:\SPSS\AUTOS\Bases\EAU.SAV'
/TABLE=*
/BY P1POLI P1POCO P1SUOP P1PRIMA.
EXECUTE.

COMPUTE PR=0.
IF (P1PRIMA+PRIMA=0 AND (P1VIGD<>VIGD OR P1VIGH<>VIGH)) PR=1.
EXECUTE.

SELECT IF PR=1 AND P1PRIMA<>0.

SAVE OUTFILE='S:\SPSS\AUTOS\Temp\REH CON VIG MAL.SAV'.


